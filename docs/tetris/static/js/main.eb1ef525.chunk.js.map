{"version":3,"sources":["services/PlayData.ts","services/FontRender.ts","services/BlockRender.ts","services/TetrisService.ts","services/GamePlay.ts","services/TitlePlay.ts","components/CanvasComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["saveData","Dexie","constructor","super","this","config","version","stores","configData","table","[object Object]","name","dt","get","update","id","JSON","stringify","put","parse","ButtonType","defaultGamePadConfig","default","axisX","axisY","buttons","Wireless Controller (STANDARD GAMEPAD Vendor: 054c Product: 09cc)","KeyboardStick","keyFlag","keepFlag","keyConfig","ArrowUp","HardDrop","ArrowLeft","Left","ArrowRight","Right","ArrowDown","Drop","Space","Hold","KeyZ","LeftTurn","KeyX","RightTurn","Enter","Start","buttonName","getConfig","then","res","isHardDrop","cancel","isButtonDown","isDrop","isLeftTurn","isRightTurn","isHold","isStart","processEvent","event","flag","key","code","type","ret","isLeft","isRight","getButtonName","text","i","length","ch","big","toUpperCase","getKeyConfig","Object","assign","setKeyConfig","setConfig","checkButton","GamepadStick","gamePad","padIndex","lastState","pushed","axis","padConfig","pushListener","index","push","pad","navigator","getGamepads","tmpaxis","axes","val","pressed","getPadConfig","setPadConfig","resetPad","v_shader","f_shader","digitData","alphaData","etcData","FontRender","gl","program","aPos","uColor","uPos","uSize","posVbo","segmentData","frameData","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","fs","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","useProgram","getAttribLocation","getUniformLocation","createBuffer","seg","makePolygon","st","frame","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","flat","STATIC_DRAW","ed","dy","dx","rad","Math","atan2","addrad","PI","wd","sx1","cos","sy1","sin","sx2","sy2","ex1","ey1","ex2","ey2","triangleStrip","pos","color","xyz","bakIx","splice","draw","rect","width","x","enable","DEPTH_TEST","enableVertexAttribArray","vertexAttribPointer","FLOAT","charCodeAt","j","mx","my","uniform3f","uniform2f","uniform4fv","drawArrays","TRIANGLE_FAN","init","drawFrame","bg","border","TRIANGLE_STRIP","render","getFontRender","getTranslation","target","up","norm","vec","len2","v","sqrt","cross","left","right","dot","forward","up2","BlockRender","projection","translation","flatMvp","uProj","uTrans","uLight","aNormal","uBlkpos","normalVbo","fieldOfViewInRadians","aspectRatio","near","far","f","tan","rangeInv","getProjection","setWeight","hor","ver","data","CULL_FACE","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","uniformMatrix4fv","uniform4f","block","uniform3fv","shadow","LINES","next","GRAVIDY_SCALE","tetriminoData","I","pattern","srs","O","S","Z","J","L","T","ButtonData","moveButton","moveResult","turnButton","turnResult","dropButton","dropResult","holdButton","touchData","move","turn","drop","hard","hold","das","speed","resetTouch","arguments","undefined","touchMove","add","touchTurn","touchDrop","touchHard","touchHold","setDas","setRepeatSpeed","max","min","isSoftDrop","stepFrame","num","btn","release","normalTgmConfig","level","nextLevel","are","lineAre","lock","lineClear","gravidy","TgmPlayListener","lastConfig","nextBg","lastMinos","configIndex","repeatSpeed","ghost","invisibleCount","resetLimit","lineWait","checkConfig","nextMino","ix","charAt","floor","random","includes","substring","getNextMino","cf","getBgColor","onHold","onDrop","onAttach","delLines","onNext","BoxNextMino","cacheMino","minos","PlayData","button","listener","mino","blockData","holdMino","curMino","dropCount","resetCount","rotate","touchCount","y","lastGhost","lastPos","mode","modeCount","nextMinoProc","tetrimino","minoCount","insertPlay","overFlag","Uint8Array","getTetrimino","makeNext","setCurMino","blk","canMove","setInsertPlay","TetrisGameOverPlay","newFlag","onInsertFrame","before","onMove","bak","reset","moveType","offset","yix","checkDeleteLines","ceil","set","subarray","dix","count","cnt","getGhost","getBlock","play","getInsertPlay","isGameOver","setGameOver","lineY","timeCount","playData","buttonTypeList","minoColorList","GamePlay","fontRender","blockRender","tgmListener","buttonState","lastWeight","horizontal","vertical","shadowList","breakList","nextPos","startCount","getBlockRender","veloc","accel","after","newpos","addShadow","oldpos","sz","abs","alpha","stick","col","current","topHeight","weight","aaa","top","sc","String","padStart","nxsc","TitlePlay","cl","clearColor","clearDepth","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","flush","keyConfigIndex","keyConfigLabels","configSetMap","padSetMap","CanvasComponent","canvasRef","useRef","animationFrameIdRef","contextRef","playRef","stickRef","useState","isOpen","setIsOpen","keySelect","setKeySelect","keyLabels","setKeyLabels","padEnabled","setPadEnabled","makeKeyLabels","indexOf","pushPadHandler","keySelectRef","openDialog","makePadLabels","blur","closeDialog","onGamepadConnected","e","gamepad","onGamepadDisconnected","isOpenRef","padConfigRef","useEffect","onKeyEvent","preventDefault","canvas","getContext","proc","requestAnimationFrame","window","addEventListener","cancelAnimationFrame","removeEventListener","React","createElement","style","display","padding","ref","height","backgroundColor","Table","striped","bordered","marginLeft","colSpan","BoxArrowInDown","CaretRight","ArrowRepeat","ArrowCounterclockwise","ArrowClockwise","Button","onClick","Modal","show","onHide","Header","Title","Body","Container","Row","Col","xs","className","size","fontSize","sm","md","lg","Footer","disabled","variant","applyDialog","newConfig","parseInt","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.eb1ef525.chunk.js","sourcesContent":["import Dexie, { Table } from \"dexie\";\n\n\nexport interface ConfigData {\n    id?: number;\n    name: string;\n    config: string;\n}\nexport interface GamePadConfig {\n    axisX: number;\n    axisY: number;\n    buttons: { [key: number]: number };\n}\n\nclass GameSaveData extends Dexie {\n    private config: Table<ConfigData>;\n\n    public constructor() {\n        super('TetrisData');\n\n        this.version(1).stores({\n            configData: '++id, name, config'\n        });\n        this.config = this.table('configData');\n    }\n\n    public async setConfig(name: string, config: any): Promise<boolean> {\n        const dt = await this.config.get({ name: name });\n        if (dt) {\n            await this.config.update(dt.id, { name: name, config: JSON.stringify(config) });\n        } else {\n            await this.config.put({ name: name, config: JSON.stringify(config) });\n        }\n        return true;\n    }\n    public async getConfig(name: string): Promise<any> {\n        const dt = await this.config.get({ name: name });\n        if (dt) {\n            return JSON.parse(dt.config);\n        }\n        return null;\n    }\n}\n\nexport const saveData = new GameSaveData();\n\n/**\n * ボタンの種類\n */\nexport enum ButtonType {\n    Left,\n    Right,\n    Drop,\n    HardDrop,\n    LeftTurn,\n    RightTurn,\n    Hold,\n    Start\n}\n\nexport interface GamePadConfig {\n    axisX: number;\n    axisY: number;\n    buttons: { [key: number]: number };\n}\n\nexport interface StickData {\n    isLeft(cancel?: boolean): boolean;\n    isRight(cancel?: boolean): boolean;\n    isHardDrop(cancel?: boolean): boolean;\n    isDrop(cancel?: boolean): boolean;\n    isLeftTurn(cancel?: boolean): boolean;\n    isRightTurn(cancel?: boolean): boolean;\n    isHold(cancel?: boolean): boolean;\n    isStart(cancel?: boolean): boolean;\n    getButtonName(type: ButtonType): string;\n\n    checkButton(): void;\n}\n\nexport interface IPlay {\n    stepFrame(gl: WebGL2RenderingContext, stick: StickData): IPlay;\n}\n\n\n\nconst defaultGamePadConfig: { [id: string]: GamePadConfig } = {\n    \"default\": {\n        axisX: 0,\n        axisY: 1,\n        buttons: [14, 15, 12, 13, 0, 1, 9, 8]\n    },\n    \"Wireless Controller (STANDARD GAMEPAD Vendor: 054c Product: 09cc)\": {\n        axisX: 0,\n        axisY: 1,\n        buttons: [14, 15, 12, 13, 0, 1, 9, 8]\n    }\n};\n\n\n/**\n * キーボード\n */\nexport class KeyboardStick implements StickData {\n    private keyFlag: number;\n    /**\n     * 押しっぱなし検出\n     */\n    private keepFlag: number;\n    private keyConfig: { [key: string]: ButtonType; } = {\n        'ArrowUp': ButtonType.HardDrop,\n        'ArrowLeft': ButtonType.Left,\n        'ArrowRight': ButtonType.Right,\n        'ArrowDown': ButtonType.Drop,\n        'Space': ButtonType.Hold,\n        'KeyZ': ButtonType.LeftTurn,\n        'KeyX': ButtonType.RightTurn,\n        'Enter': ButtonType.Start\n    };\n    private buttonName: { [type: number]: string; } = {};\n\n    public constructor() {\n        this.keyFlag = 0;\n        this.keepFlag = 0;\n        saveData.getConfig('keyConfig').then(res => {\n            if (res) {\n                this.keyConfig = res;\n                this.buttonName = {};\n            }\n        });\n    }\n    isHardDrop(cancel?: boolean | undefined): boolean {\n        return this.isButtonDown(ButtonType.HardDrop, cancel);\n    }\n    isDrop(cancel?: boolean | undefined): boolean {\n        return this.isButtonDown(ButtonType.Drop, cancel);\n    }\n    isLeftTurn(cancel?: boolean | undefined): boolean {\n        return this.isButtonDown(ButtonType.LeftTurn, cancel);\n    }\n    isRightTurn(cancel?: boolean | undefined): boolean {\n        return this.isButtonDown(ButtonType.RightTurn, cancel);\n    }\n    isHold(cancel?: boolean | undefined): boolean {\n        return this.isButtonDown(ButtonType.Hold, cancel);\n    }\n    isStart(cancel?: boolean | undefined): boolean {\n        return this.isButtonDown(ButtonType.Start, cancel);\n    }\n    public processEvent(event: KeyboardEvent): boolean {\n        let flag = 0;\n        if (event.key in this.keyConfig) {\n            flag = 1 << this.keyConfig[event.key];\n        } else if (event.code in this.keyConfig) {\n            flag = 1 << this.keyConfig[event.code];\n        }\n        if (flag) {\n            if (event.type === 'keydown') {\n                this.keyFlag |= flag;\n            } else if (event.type === 'keyup') {\n                this.keyFlag &= ~flag;\n                this.keepFlag &= ~flag;\n            }\n            return true;\n        }\n        return false;\n    }\n    protected isButtonDown(type: ButtonType, cancel?: boolean): boolean {\n        let ret = (this.keyFlag & (1 << type) & ~this.keepFlag) > 0;\n        if (cancel && ret) {\n            this.keepFlag |= (1 << type);\n        }\n        return ret;\n    }\n\n    isLeft(cancel?: boolean): boolean {\n        return this.isButtonDown(ButtonType.Left, cancel);\n    }\n    isRight(cancel?: boolean): boolean {\n        return this.isButtonDown(ButtonType.Right, cancel);\n    }\n    getButtonName(type: ButtonType): string {\n        if (!this.buttonName[type]) {\n            for (let key in this.keyConfig) {\n                if (this.keyConfig[key] === type) {\n                    let text = \"\";\n                    for (let i = 0; i < key.length; i++) {\n                        const ch = key[i];\n                        const big = ch.toUpperCase();\n                        if (i > 0 && ch === big) {\n                            text += ' ';\n                        }\n                        text += big;\n                    }\n                    this.buttonName[type] = text;\n                    break;\n                }\n            }\n        }\n        return this.buttonName[type];\n    }\n\n    public getKeyConfig(): { [key: string]: ButtonType; } {\n        return Object.assign({}, this.keyConfig);\n    }\n    public setKeyConfig(config: { [key: string]: ButtonType; }): void {\n        this.keyConfig = config;\n        this.buttonName = {};\n        saveData.setConfig(\"keyConfig\", config).then();\n    }\n    checkButton(): void {\n    }\n}\n\nexport class GamepadStick extends KeyboardStick {\n    private padIndex: number;\n    private lastState: boolean[];\n    private pushed: boolean[];\n    private axis: boolean[];\n    private padConfig: GamePadConfig;\n    private id: string;\n    public pushListener?: (button: number) => void;\n\n    public constructor(gamePad: Gamepad) {\n        super();\n        this.id = gamePad.id;\n        this.axis = [false, false, false, false];\n        this.padIndex = gamePad.index;\n        this.lastState = [];\n        this.pushed = [];\n        for (let i = 0; i < gamePad.buttons.length; i++) {\n            this.lastState.push(false);\n            this.pushed.push(false);\n        }\n        this.padConfig = defaultGamePadConfig[gamePad.id] || defaultGamePadConfig['default'];\n        saveData.getConfig(gamePad.id).then(res => {\n            if (res) {\n                this.padConfig = res;\n            }\n        });\n    }\n\n    protected isButtonDown(type: ButtonType, cancel?: boolean | undefined): boolean {\n        //console.log(this.gamePad.axes);\n        const index = this.padConfig.buttons[type];\n        if (this.pushed[index]) {\n            if (cancel) {\n                this.pushed[index] = false;\n            }\n            return true;\n        }\n        return super.isButtonDown(type, cancel);\n    }\n\n    checkButton(): void {\n        const pad = navigator.getGamepads()[this.padIndex];\n        if (pad) {\n            let tmpaxis = [false, false, false, false];\n            if (this.padConfig.axisX < pad.axes.length) {\n                let val = pad.axes[this.padConfig.axisX];\n                if (val < -0.5) {\n                    tmpaxis[ButtonType.Left] = true;\n                } else if (val > 0.5) {\n                    tmpaxis[ButtonType.Right] = true;\n                }\n            }\n            if (this.padConfig.axisY < pad.axes.length) {\n                let val = pad.axes[this.padConfig.axisY];\n                if (val < -0.8) {\n                    tmpaxis[ButtonType.HardDrop] = true;\n                } else if (val > 0.5) {\n                    tmpaxis[ButtonType.Drop] = true;\n                }\n            }\n            for (let i = 0; i < tmpaxis.length; i++) {\n                if (tmpaxis[i] !== this.axis[i]) {\n                    // 変わった\n                    this.axis[i] = tmpaxis[i];\n                    this.pushed[this.padConfig.buttons[i]] = tmpaxis[i];\n                }\n            }\n            for (let i = 0; i < pad.buttons.length; i++) {\n                if (this.lastState[i] !== pad.buttons[i].pressed) {\n                    this.lastState[i] = pad.buttons[i].pressed;\n                    this.pushed[i] = this.lastState[i];\n                    if (this.lastState[i] && this.pushListener) {\n                        this.pushListener(i);\n                    }\n                }\n            }\n        }\n    }\n\n    public getPadConfig(): GamePadConfig {\n        return Object.assign({}, this.padConfig);\n    }\n    public setPadConfig(config: GamePadConfig): void {\n        this.padConfig = config;\n        saveData.setConfig(this.id, config).then();\n    }\n    public resetPad(): void {\n        for (let i = 0; i < this.pushed.length; i++) {\n            this.pushed[i] = false;\n        }\n    }\n}","const v_shader = `\n// xyz, a=色の明るさ\nattribute vec4 a_pos;\n\nuniform vec3 u_pos;\nuniform vec2 u_size;\nuniform vec4 u_color;\nvarying vec4 v_color;\n\nvoid main() {\n    vec2 addpos = u_pos.xy + u_size.xy / 2.0;\n    gl_Position = vec4(a_pos.x * u_size.x + addpos.x, -(a_pos.y * u_size.y) / 2.0 - addpos.y, a_pos.z + u_pos.z, 1.0);\n    v_color = vec4(u_color.rgb * a_pos.a, u_color.a);\n}\n`;\n\nconst f_shader = `\nprecision mediump float;\n\nvarying vec4 v_color;\n\nvoid main() {\n    gl_FragColor = v_color;\n}\n`;\n\nconst digitData = [\n    0xc3f, 0x406, 0xdb, 0x8f, 0xe6, 0xed, 0xfd, 0x1401, 0xff, 0xe7\n];\nconst alphaData = [\n    0xf7, 0x128f, 0x39, 0x120f, 0xf9, 0xf1, 0xbd, 0xf6, 0x1209, 0x1e, 0x2470, 0x38, 0x536, 0x2136,\n    0x3f, 0xf3, 0x203f, 0x20f3, 0x18d, 0x1201, 0x3e, 0xc30, 0x2836, 0x2d00, 0x1500, 0xc09\n];\nconst etcData = [\n    // コロン\n    0xc000,\n    // ピリオド\n    0x10000\n];\n\nexport class FontRender {\n    private program: WebGLProgram;\n    private aPos: number;\n    private uColor: WebGLUniformLocation;\n    private uPos: WebGLUniformLocation;\n    private uSize: WebGLUniformLocation;\n    private posVbo: WebGLBuffer;\n    private segmentData: number[][];\n    private frameData: number[];\n\n    public constructor(gl: WebGL2RenderingContext) {\n        let vs = gl.createShader(gl.VERTEX_SHADER)!;\n        gl.shaderSource(vs, v_shader);\n        gl.compileShader(vs);\n        if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n            console.log(gl.getShaderInfoLog(vs));\n        }\n        let fs = gl.createShader(gl.FRAGMENT_SHADER)!;\n        gl.shaderSource(fs, f_shader);\n        gl.compileShader(fs);\n        if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n            console.log(gl.getShaderInfoLog(fs));\n        }\n        this.program = gl.createProgram()!;\n        gl.attachShader(this.program, vs);\n        gl.attachShader(this.program, fs);\n        gl.linkProgram(this.program);\n        //\n        gl.useProgram(this.program);\n        this.aPos = gl.getAttribLocation(this.program, \"a_pos\");\n        this.uColor = gl.getUniformLocation(this.program, \"u_color\")!;\n        this.uPos = gl.getUniformLocation(this.program, \"u_pos\")!;\n        this.uSize = gl.getUniformLocation(this.program, \"u_size\")!;\n        // buffer\n        this.posVbo = gl.createBuffer()!;\n        const seg = [\n            this.makePolygon([0.4, -0.95], [-0.4, -0.95]),\n            this.makePolygon([0.4, -0.9], [0.4, -0.05]),\n            this.makePolygon([0.4, 0.05], [0.4, 0.9]),\n            this.makePolygon([-0.4, 0.95], [0.4, 0.95]),\n            this.makePolygon([-0.4, 0.05], [-0.4, 0.9]),\n            this.makePolygon([-0.4, -0.9], [-0.4, -0.05]),\n            this.makePolygon([-0.4, 0], [-0.01, 0]),\n            this.makePolygon([0.01, 0], [0.4, 0]),\n            this.makePolygon([-0.4, -0.9], [-0.05, -0.05]),\n            this.makePolygon([0, -0.9], [0, -0.05]),\n            this.makePolygon([0.4, -0.9], [0.05, -0.05]),\n            this.makePolygon([-0.05, 0.05], [-0.4, 0.9]),\n            this.makePolygon([0, 0.05], [0, 0.9]),\n            this.makePolygon([0.05, 0.05], [0.4, 0.9]),\n            // コロンやピリオド\n            [\n                0, -0.4, -0.2, 1.0,\n                0, -0.6, -0.1, 1.1,\n                -0.2, -0.4, -0.1, 1.2,\n                0, -0.2, -0.1, 0.8,\n                0.2, -0.4, -0.1, 0.9,\n                0, -0.6, -0.1, 1.1\n            ],\n            [\n                0, 0.4, -0.2, 1.0,\n                0, 0.2, -0.1, 1.1,\n                -0.2, 0.4, -0.1, 1.2,\n                0, 0.6, -0.1, 0.8,\n                0.2, 0.4, -0.1, 0.9,\n                0, 0.2, -0.1, 1.1\n            ],\n            [\n                -0.2, 0.8, -0.2, 1.0,\n                -0.2, 0.6, -0.1, 1.1,\n                -0.4, 0.8, -0.1, 1.2,\n                -0.2, 1, -0.1, 0.8,\n                0, 0.8, -0.1, 0.9,\n                -0.2, 0.6, -0.1, 1.1\n            ]\n        ];\n        let st = 0;\n        this.segmentData = [];\n        for (let dt of seg) {\n            this.segmentData.push([st, dt.length / 4]);\n            st += dt.length / 4;\n        }\n        const frame = [\n            -0.5, -1, -0.05, 1,\n            -0.5, 1, -0.05, 0.8,\n            0.5, -1, -0.05, 0.9,\n            0.5, 1, -0.05, 0.7,\n            -0.51, -1.02, -0.1, 1,\n            -0.49, -0.98, -0.11, 1.1,\n            0.51, -1.02, -0.1, 0.9,\n            0.49, -0.98, -0.11, 1.0,\n            0.51, 1.02, -0.1, 0.7,\n            0.49, 0.98, -0.11, 0.8,\n            -0.51, 1.02, -0.1, 0.8,\n            -0.49, 0.98, -0.11, 0.9,\n            -0.51, -1.02, -0.1, 1,\n            -0.49, -0.98, -0.11, 1.1\n        ];\n        this.frameData = [st, 4, st + 4, frame.length / 4 - 4];\n        seg.push(frame);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.posVbo);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(seg.flat()), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    }\n\n    /**\n     * \n     * @param st \n     * @param ed \n     */\n    private makePolygon(st: number[], ed: number[]): number[] {\n        const dy = ed[1] - st[1];\n        const dx = ed[0] - st[0];\n        const rad = Math.atan2(dy, dx);\n        const addrad = Math.PI * 5 / 16;\n        const wd = 0.15;\n        const sx1 = Math.cos(rad - addrad) * wd;\n        const sy1 = Math.sin(rad - addrad) * wd;\n        const sx2 = Math.cos(rad + addrad) * wd;\n        const sy2 = Math.sin(rad + addrad) * wd;\n        const ex1 = Math.cos(rad + Math.PI + addrad) * wd;\n        const ey1 = Math.sin(rad + Math.PI + addrad) * wd;\n        const ex2 = Math.cos(rad + Math.PI - addrad) * wd;\n        const ey2 = Math.sin(rad + Math.PI - addrad) * wd;\n        const cx = (st[0] + ed[0]) / 2.0;\n        const cy = (st[1] + ed[1]) / 2.0;\n        return [\n            cx, cy, -0.1, 1.0,\n            st[0], st[1], 0, 1.1,\n            st[0] + sx2, st[1] + sy2, 0, 1.2,\n            ed[0] + ex2, ed[1] + ey2, 0, 1.0,\n            ed[0], ed[1], 0, 0.9,\n            ed[0] + ex1, ed[1] + ey1, 0, 0.8,\n            st[0] + sx1, st[1] + sy1, 0, 0.9,\n            st[0], st[1], 0, 1.1\n        ];\n    }\n\n    private triangleStrip(pos: number[][], color: number[]): number[] {\n        let xyz: number[] = [];\n        let bakIx: number[][] = [];\n        for (let i = 0; i < pos.length; i++) {\n            bakIx.push(pos[i]);\n            if (bakIx.length > 3) {\n                bakIx.splice(0, 1);\n            }\n            if (bakIx.length === 3) {\n                if (i & 1) {\n                    // 逆\n                    xyz.push(...bakIx[0], ...bakIx[2], ...bakIx[1]);\n                } else {\n                    xyz.push(...bakIx[0], ...bakIx[1], ...bakIx[2]);\n                }\n            }\n        }\n        let ret: number[] = [];\n        for (let i = 0; i < xyz.length; i += 3) {\n            ret.push(xyz[i], xyz[i + 1], xyz[i + 2]);\n            if (i < 9) {\n                ret.push(color[1]);\n            } else if (i >= xyz.length - 9) {\n                ret.push(color[1]);\n            } else {\n                ret.push(color[1]);\n            }\n        }\n        return ret;\n    }\n\n    public draw(gl: WebGL2RenderingContext, text: string, rect: number[], color: number[]): void {\n        if (color.length === 3) {\n            color = [...color, 1.0];\n        }\n        let width = rect[2] / text.length;\n        let x = rect[0];\n        gl.useProgram(this.program);\n        gl.enable(gl.DEPTH_TEST);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.posVbo);\n        gl.enableVertexAttribArray(this.aPos);\n        gl.vertexAttribPointer(this.aPos, 4, gl.FLOAT, false, 0, 0);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n        for (let i = 0; i < text.length; i++) {\n            let ch = text.toUpperCase().charCodeAt(i);\n            let flag = 0;\n            if (ch >= 48 && ch < 58) {\n                // 数字\n                flag = digitData[ch - 48];\n            } else if (ch >= 65 && ch - 65 < alphaData.length) {\n                // 英字\n                flag = alphaData[ch - 65];\n            } else if (ch === ':'.charCodeAt(0)) {\n                flag = etcData[0];\n            } else if (ch === '.'.charCodeAt(0)) {\n                flag = etcData[1];\n            }\n            if (flag > 0) {\n                for (let j = 0; j < this.segmentData.length; j++) {\n                    if (flag & (1 << j)) {\n                        const mx = width / 20.0;\n                        const my = rect[3] / 20.0;\n                        gl.uniform3f(this.uPos, x, rect[1], -0.5);\n                        gl.uniform2f(this.uSize, width - mx, rect[3]);\n                        gl.uniform4fv(this.uColor, color);\n                        gl.drawArrays(gl.TRIANGLE_FAN, this.segmentData[j][0], this.segmentData[j][1]);\n                        gl.uniform3f(this.uPos, x + mx, rect[1] + my, -0.3);\n                        gl.uniform2f(this.uSize, width - mx, rect[3]);\n                        gl.uniform4fv(this.uColor, [0, 0, 0, color[3]]);\n                        gl.drawArrays(gl.TRIANGLE_FAN, this.segmentData[j][0], this.segmentData[j][1]);\n                        //gl.drawArrays(gl.LINE_LOOP, this.segmentData[j][0] + 1, this.segmentData[j][1] - 2);\n                    }\n                }\n            }\n            x += width;\n        }\n    }\n\n    public init(gl: WebGL2RenderingContext): void {\n        gl.useProgram(this.program);\n    }\n\n    public drawFrame(gl: WebGL2RenderingContext, rect: number[], bg: number[], border?: number[]): void {\n        gl.useProgram(this.program);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.posVbo);\n        gl.enableVertexAttribArray(this.aPos);\n        gl.vertexAttribPointer(this.aPos, 4, gl.FLOAT, false, 0, 0);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.uniform3f(this.uPos, rect[0], rect[1], 0);\n        gl.uniform2f(this.uSize, rect[2], rect[3]);\n        if (border) {\n            if (border.length === 3) {\n                border = [...border, 1.0];\n            }\n            gl.uniform4fv(this.uColor, border);\n            gl.drawArrays(gl.TRIANGLE_STRIP, this.frameData[2], this.frameData[3]);\n        }\n        if (bg.length === 3) {\n            bg = [...bg, 1.0];\n        }\n        gl.uniform4fv(this.uColor, bg);\n        gl.drawArrays(gl.TRIANGLE_STRIP, this.frameData[0], this.frameData[1]);\n    }\n}\n\nlet render: FontRender;\n\nexport function getFontRender(gl: WebGL2RenderingContext): FontRender {\n    if (!render) {\n        render = new FontRender(gl);\n    }\n    return render;\n}","const v_shader = `\n// xyz, a=色の明るさ\nattribute vec4 a_pos;\nattribute vec3 a_normal;\n\nuniform vec3 u_blkpos;\nuniform vec4 u_color;\n\nuniform mat4 u_trans;\nuniform mat4 u_proj;\nuniform vec3 u_light;\nvarying vec4 v_color;\n\nvoid main() {\n    mat4 mvp = u_proj * u_trans;\n    gl_Position = mvp * vec4(a_pos.xyz + u_blkpos, 1.0);\n    float diffuse = dot((u_proj * vec4(a_normal, 1.0)).xyz, u_light) * 0.3 + 0.8;\n    v_color = vec4(u_color.rgb * a_pos.a * diffuse, u_color.a);\n}\n`;\n\nconst f_shader = `\nprecision mediump float;\n\nvarying vec4 v_color;\n\nvoid main() {\n    gl_FragColor = v_color;\n}\n`;\n\nexport interface MinoBlock {\n    pos: number[];\n    color: number[];\n}\nexport interface DrawBlockData {\n    block: MinoBlock[];\n    shadow: MinoBlock[];\n    next: MinoBlock[];\n}\n\nexport function getProjection(fieldOfViewInRadians: number, aspectRatio: number, near: number, far: number): number[] {\n    let f = 1.0 / Math.tan(fieldOfViewInRadians / 2);\n    let rangeInv = 1 / (near - far);\n\n    return [\n        f / aspectRatio, 0, 0, 0,\n        0, f, 0, 0,\n        0, 0, (near + far) * rangeInv, -1,\n        0, 0, near * far * rangeInv * 2, 0\n    ];\n}\nexport function getTranslation(pos: number[], target: number[], up: number[]): number[] {\n    function norm(vec: number[]): number[] {\n        let len2 = 0;\n        for (let v of vec) {\n            len2 += v * v;\n        }\n        len2 = Math.sqrt(len2);\n        let ret: number[] = [];\n        for (let v of vec) {\n            ret.push(v / len2);\n        }\n        return ret;\n    }\n    function cross(left: number[], right: number[]): number[] {\n        return [\n            left[1] * right[2] - left[2] * right[1],\n            left[2] * right[0] - left[0] * right[2],\n            left[0] * right[1] - left[1] * right[0]\n        ];\n    }\n    function dot(left: number[], right: number[]): number {\n        return left[0] * right[0] + left[1] * right[1] + left[2] * right[2];\n    }\n    let forward = norm([target[0] - pos[0], target[1] - pos[1], target[2] - pos[2]]);\n    let right = norm(cross(up, forward));\n    let up2 = cross(forward, right);\n    return [\n        right[0], up2[0], -forward[0], 0,\n        right[1], up2[1], -forward[1], 0,\n        right[2], up2[2], -forward[2], 0,\n        -dot(right, pos), -dot(up2, pos), dot(forward, pos), 1\n    ];\n}\n\nexport class BlockRender {\n    private program: WebGLProgram;\n    private projection: number[];\n    private translation: number[];\n    private flatMvp: {\n        projection: number[];\n        translation: number[];\n    };\n    private uProj: WebGLUniformLocation;\n    private uTrans: WebGLUniformLocation;\n    private uLight: WebGLUniformLocation;\n    private aPos: number;\n    private aNormal: number;\n    private uBlkpos: WebGLUniformLocation;\n    private uColor: WebGLUniformLocation;\n    private posVbo: WebGLBuffer;\n    private normalVbo: WebGLBuffer;\n\n    public constructor(gl: WebGL2RenderingContext) {\n        let vs = gl.createShader(gl.VERTEX_SHADER)!;\n        gl.shaderSource(vs, v_shader);\n        gl.compileShader(vs);\n        if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n            console.log(gl.getShaderInfoLog(vs));\n        }\n        let fs = gl.createShader(gl.FRAGMENT_SHADER)!;\n        gl.shaderSource(fs, f_shader);\n        gl.compileShader(fs);\n        if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n            console.log(gl.getShaderInfoLog(fs));\n        }\n        this.program = gl.createProgram()!;\n        gl.attachShader(this.program, vs);\n        gl.attachShader(this.program, fs);\n        gl.linkProgram(this.program);\n        //\n        gl.useProgram(this.program);\n\n        this.projection = getProjection(0.7, 1, 1, -1);\n        let dy = 0;\n        this.translation = getTranslation([5, 28 - dy, 25 - dy / 2], [5, 10 - dy / 2, 0], [0, -1, 0]);\n\n        this.flatMvp = {\n            projection: [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\n            translation: [1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, -5, 10, -0.2, 13]\n        }\n\n        this.uProj = gl.getUniformLocation(this.program, \"u_proj\")!;\n        this.uTrans = gl.getUniformLocation(this.program, \"u_trans\")!;\n        this.uLight = gl.getUniformLocation(this.program, \"u_light\")!;\n        this.aPos = gl.getAttribLocation(this.program, \"a_pos\");\n        this.aNormal = gl.getAttribLocation(this.program, \"a_normal\");\n        this.uBlkpos = gl.getUniformLocation(this.program, \"u_blkpos\")!;\n        this.uColor = gl.getUniformLocation(this.program, \"u_color\")!;\n\n        this.posVbo = gl.createBuffer()!;\n        this.normalVbo = gl.createBuffer()!;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.posVbo);\n        const st = 0.05;\n        const ed = 1 - st;\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n            st, st, ed, 1,\n            st, ed, ed, 0.9,\n            ed, st, ed, 0.8,\n            ed, ed, ed, 0.6,\n            ed, st, ed, 0.9,\n            ed, ed, ed, 0.8,\n            ed, st, st, 0.8,\n            ed, ed, st, 0.7,\n            ed, ed, st, 1,\n            ed, ed, ed, 0.9,\n            st, ed, st, 0.8,\n            st, ed, ed, 0.9,\n            st, ed, st, 0.9,\n            st, ed, ed, 0.8,\n            st, st, st, 1.0,\n            st, st, ed, 0.9,\n            // ix=16, 外枠\n            -0.5, 20.5, 1, 1.0,\n            -0.5, 20.5, 0, 0.9,\n            10.5, 20.5, 1, 0.9,\n            10.5, 20.5, 0, 0.7,\n            //\n            0, 20, 1, 0.9,\n            0, 20, 0, 0.7,\n            0, 0, 1, 1.0,\n            0, 0, 0, 0.8,\n            //\n            0, 0, 1, 1.0,\n            0, 0, 0, 0.8,\n            10, 0, 1, 0.9,\n            10, 0, 0, 0.7,\n            //\n            10, 0, 1, 1.0,\n            10, 0, 0, 0.9,\n            10, 20, 1, 0.8,\n            10, 20, 0, 0.7,\n            // 表面\n            10, 20, 1, 0.8,\n            10.5, 20.5, 1, 1.0,\n            10, 0, 1, 0.8,\n            10.5, -0.5, 1, 1.0,\n            0, 0, 1, 0.8,\n            -0.5, -0.5, 1, 1.0,\n            0, 20, 1, 0.8,\n            -0.5, 20.5, 1, 1.0,\n            10, 20, 1, 0.8,\n            10.5, 20.5, 1, 1.0,\n            // 残像 ix=42\n            // 下面\n            st, ed, ed, 1,\n            ed, ed, ed, 1,\n            st, ed, ed, 1,\n            st, ed, st, 1,\n            ed, ed, ed, 1,\n            ed, ed, st, 1,\n            st, ed, st, 1,\n            ed, ed, st, 1,\n            // 上縦\n            st, st, ed, 1,\n            st, ed, ed, 1,\n            ed, st, ed, 1,\n            ed, ed, ed, 1,\n            // 下縦\n            st, st, st, 1,\n            st, ed, st, 1,\n            ed, st, st, 1,\n            ed, ed, st, 1,\n            // 上面\n            st, st, ed, 1,\n            ed, st, ed, 1,\n            st, st, st, 1,\n            st, st, ed, 1,\n            ed, st, st, 1,\n            ed, st, ed, 1,\n            st, st, st, 1,\n            ed, st, st, 1,\n            // 縦線 ix=66\n            // 背景色\n            0, 0, 0, 0.8,\n            0, 20, 0, 1,\n            10, 0, 0, 0.7,\n            10, 20, 0, 0.9,\n            // 縦線\n            1, 0, 0, 1,\n            1, 20, 0, 1,\n            2, 0, 0, 1,\n            2, 20, 0, 1,\n            3, 0, 0, 1,\n            3, 20, 0, 1,\n            4, 0, 0, 1,\n            4, 20, 0, 1,\n            5, 0, 0, 1,\n            5, 20, 0, 1,\n            6, 0, 0, 1,\n            6, 20, 0, 1,\n            7, 0, 0, 1,\n            7, 20, 0, 1,\n            8, 0, 0, 1,\n            8, 20, 0, 1,\n            9, 0, 0, 1,\n            9, 20, 0, 1,\n        ]), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.normalVbo);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n            1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,\n            0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,\n            -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0,\n            // 外枠\n            0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,\n            1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,\n            0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,\n            -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0,\n            // 表面\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n            0, 0, 1, 0, 0, 1,\n            // 残像\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n            // 背景\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n            // 線\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n            0, 0, 1, 0, 0, 1,\n        ]), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    }\n    public setWeight(hor: number, ver: number): void {\n        let dy = ver / 5;\n        let dx = 5 - hor / 50;\n        if (dx < 1) {\n            dx = 1;\n        } else if (dx > 9) {\n            dx = 9;\n        }\n        this.translation = getTranslation([dx, 28 - dy, 25 - dy / 2], [5, 10 - dy / 2, 0], [0, -1, 0]);\n    }\n\n    public draw(gl: WebGL2RenderingContext, data: DrawBlockData): void {\n        gl.useProgram(this.program);\n        gl.enable(gl.CULL_FACE);\n        gl.enable(gl.DEPTH_TEST);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.posVbo);\n        gl.enableVertexAttribArray(this.aPos);\n        gl.vertexAttribPointer(this.aPos, 4, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.normalVbo);\n        gl.enableVertexAttribArray(this.aNormal);\n        gl.vertexAttribPointer(this.aNormal, 3, gl.FLOAT, false, 0, 0);\n\n        gl.uniformMatrix4fv(this.uProj, false, this.projection);\n        gl.uniformMatrix4fv(this.uTrans, false, this.translation);\n        gl.uniform3f(this.uLight, 0, -0.8, -0.6);\n\n        // 外枠\n        gl.uniform3f(this.uBlkpos, 0, 0, 0);\n        //gl.uniform3f(this.uBlkpos, 0, 0, 0);\n        gl.uniform4f(this.uColor, 1, 1, 1.0, 1.0);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 16, 26);\n        gl.uniform4f(this.uColor, 0, 0, 0.4, 1.0);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 66, 4);\n        //gl.drawArrays(gl.LINES, 66, 18);\n\n        for (let dt of data.block) {\n            gl.uniform3fv(this.uBlkpos, dt.pos);\n            gl.uniform4fv(this.uColor, dt.color);\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 16);\n        }\n        for (let dt of data.shadow) {\n            gl.uniform3fv(this.uBlkpos, dt.pos);\n            gl.uniform4fv(this.uColor, dt.color);\n            gl.drawArrays(gl.LINES, 42, 24);\n        }\n\n        // その他\n        gl.uniform3f(this.uLight, 0.4, 0.4, 0.8);\n        gl.uniformMatrix4fv(this.uProj, false, this.flatMvp.projection);\n        gl.uniformMatrix4fv(this.uTrans, false, this.flatMvp.translation);\n\n        for (let dt of data.next) {\n            gl.uniform3fv(this.uBlkpos, dt.pos);\n            gl.uniform4fv(this.uColor, dt.color);\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 16);\n        }\n    }\n}\n\nlet render: BlockRender;\n\nexport function getBlockRender(gl: WebGL2RenderingContext): BlockRender {\n    if (!render) {\n        render = new BlockRender(gl);\n    }\n    return render;\n}","import { ButtonType } from \"./PlayData\";\n\n/**\n * 1G落下するまでのスケール\n */\nexport const GRAVIDY_SCALE = 65536;\n\nexport interface Tetrimino {\n    index?: number;\n    /**\n     * パターン\n     * 16真数4桁で表現\n     */\n    pattern: number[];\n    /**\n     * SRSの回転補正s\n     */\n    srs: {\n        right: number[][];\n        left: number[][];\n    }\n}\nexport const tetriminoData: { [type: string]: Tetrimino } = {\n    'I': {\n        pattern: [0x0f00, 0x2222, 0x00f0, 0x4444],\n        srs: {\n            right: [\n                [-2, 0, 1, 0, -2, -1, 1, 2],\n                [-1, 0, 2, 0, -1, 2, 2, -1],\n                [2, 0, -1, 0, 2, 1, -1, -2],\n                [1, 0, -2, 0, 1, -2, -2, 1]\n            ],\n            left: [\n                [-1, 0, 2, 0, -1, 2, 2, -1],\n                [2, 0, -1, 0, 2, 1, -1, -2],\n                [1, 0, -2, 0, 1, -2, -2, 1],\n                [1, -2, 0, 1, 0, -2, -1, 1, 2]\n            ]\n        }\n    },\n    'O': {\n        pattern: [0x0660, 0x0660, 0x0660, 0x0660],\n        srs: {\n            right: [[], [], [], []],\n            left: [[], [], [], []]\n        }\n    },\n    'S': {\n        pattern: [0x06c0, 0x0462, 0x006c, 0x08c4],\n        srs: {\n            right: [\n                [-1, 0, -1, 1, 0, 0, -2, -1, -2],\n                [1, 0, 1, -1, 0, 2, 1, 2],\n                [1, 0, 1, 1, 0, -2, 1, -2],\n                [-1, 0, -1, -1, 0, 2, -1, 2]\n            ],\n            left: [\n                [1, 0, 1, 1, 0, -2, 1, -2],\n                [1, 0, 1, -1, 0, 2, 1, 2],\n                [-1, 0, -1, 1, 0, -2, -1, -2],\n                [-1, 0, -1, -1, 0, 2, -1, 2]\n            ]\n        }\n    },\n    'Z': {\n        pattern: [0x0c60, 0x0264, 0x00c6, 0x04c8],\n        srs: {\n            right: [\n                [-1, 0, -1, 1, 0, 0, -2, -1, -2],\n                [1, 0, 1, -1, 0, 2, 1, 2],\n                [1, 0, 1, 1, 0, -2, 1, -2],\n                [-1, 0, -1, -1, 0, 2, -1, 2]\n            ],\n            left: [\n                [1, 0, 1, 1, 0, -2, 1, -2],\n                [1, 0, 1, -1, 0, 2, 1, 2],\n                [-1, 0, -1, 1, 0, -2, -1, -2],\n                [-1, 0, -1, -1, 0, 2, -1, 2]\n            ]\n        }\n    },\n    'J': {\n        pattern: [0x08e0, 0x0644, 0x00e2, 0x044c],\n        srs: {\n            right: [\n                [-1, 0, -1, 1, 0, 0, -2, -1, -2],\n                [1, 0, 1, -1, 0, 2, 1, 2],\n                [1, 0, 1, 1, 0, -2, 1, -2],\n                [-1, 0, -1, -1, 0, 2, -1, 2]\n            ],\n            left: [\n                [1, 0, 1, 1, 0, -2, 1, -2],\n                [1, 0, 1, -1, 0, 2, 1, 2],\n                [-1, 0, -1, 1, 0, -2, -1, -2],\n                [-1, 0, -1, -1, 0, 2, -1, 2]\n            ]\n        }\n    },\n    'L': {\n        pattern: [0x02e0, 0x0446, 0x00e8, 0x0c44],\n        srs: {\n            right: [\n                [-1, 0, -1, 1, 0, 0, -2, -1, -2],\n                [1, 0, 1, -1, 0, 2, 1, 2],\n                [1, 0, 1, 1, 0, -2, 1, -2],\n                [-1, 0, -1, -1, 0, 2, -1, 2]\n            ],\n            left: [\n                [1, 0, 1, 1, 0, -2, 1, -2],\n                [1, 0, 1, -1, 0, 2, 1, 2],\n                [-1, 0, -1, 1, 0, -2, -1, -2],\n                [-1, 0, -1, -1, 0, 2, -1, 2]\n            ]\n        }\n    },\n    'T': {\n        pattern: [0x04e0, 0x0464, 0x00e4, 0x04c4],\n        srs: {\n            right: [\n                [-1, 0, -1, 1, 0, /*0, -2,*/ -1, -2],\n                [1, 0, 1, -1, 0, 2, 1, 2],\n                [1, 0, /*1, 1,*/ 0, -2, 1, -2],\n                [-1, 0, -1, -1, 0, 2, -1, 2]\n            ],\n            left: [\n                [1, 0, 1, 1, /*0, -2,*/ 1, -2],\n                [1, 0, 1, -1, 0, 2, 1, 2],\n                [-1, 0, /*-1, 1,*/ 0, -2, -1, -2],\n                [-1, 0, -1, -1, 0, 2, -1, 2]\n            ]\n        }\n    }\n}\nexport const minoColorPattern = [\n    [\n        [0.7, 0.7, 0.7],\n        // IOSZJLT\n        [0, 1, 1],\n        [1, 1, 0],\n        [0, 1, 0],\n        [1, 0, 0],\n        [0.2, 0.2, 1],\n        [1, 0.7, 0],\n        [1, 0, 1]\n    ]\n];\n\nexport interface PlayConfig {\n    /** 左右長押しで移動し始めるフレーム数 */\n    das: number;\n    /** 左右長押しで連続移動するフレーム数 */\n    repeatSpeed: number;\n    /** 落下速度 */\n    gravidy: number;\n    /** 地面についてからの遊び時間 */\n    lock: number;\n    /** ラインが消える際の消え始めるまでの待ち時間 */\n    lineWait: number;\n    /** ラインが消えない時に、次のミノが落ち出すまでの時間 */\n    are: number;\n    /** ラインが消えた後に、次のミノが落ち出すまでの時間 */\n    lineAre: number;\n    /** ブロックが消えているときのアニメーション時間 */\n    lineClear: number;\n    /** 遊び時間中の回転によるリセットの上限 */\n    resetLimit: number;\n    /** ゴーストブロックの表示 */\n    ghost: boolean;\n    /** ブロックを置いてから、何回のミノが登場したら見えなくなるか(0-15)。0だと見え続ける */\n    invisibleCount: number;\n}\n\n/**\n * ネクストブロックを取るための\n */\nexport interface INextMino {\n    /**\n     * 次のテトリミノを返却する\n     * @param num 0から始まる通し番号\n     * @returns \"ITOSZJL\"のどれかの文字\n     */\n    nextMino(num: number): string;\n}\n\n/**\n * ボタン操作のデータ\n */\nexport class ButtonData {\n    private moveButton: number = 0;\n    private moveResult: number = 0;\n    private turnButton: number = 0;\n    private turnResult: number = 0;\n    private dropButton: number = 0;\n    private dropResult: number = 0;\n    private holdButton: boolean = false;\n\n    /**\n     * タッチ操作のデータ\n     */\n    private touchData = {\n        move: 0,\n        turn: 0,\n        drop: 0,\n        hard: false,\n        hold: false\n    };\n\n    // 0.3秒\n    private das: number = 18;\n\n    // 0.5秒で端から端まで\n    private speed: number = 3;\n\n    public resetTouch(flag = { move: true, turn: true, drop: true, hard: true, hold: true }): void {\n        if (flag.move) {\n            this.touchData.move = 0;\n        }\n        if (flag.turn) {\n            this.touchData.turn = 0;\n        }\n        if (flag.drop) {\n            this.touchData.drop = 0;\n        }\n        if (flag.hard) {\n            this.touchData.hard = false;\n        }\n        if (flag.hold) {\n            this.touchData.hold = false;\n        }\n    }\n    public touchMove(add: number): void {\n        this.touchData.move += add;\n    }\n    public touchTurn(add: number): void {\n        this.touchData.turn += add;\n    }\n    public touchDrop(add: number): void {\n        this.touchData.drop += add;\n        this.touchData.hard = false;\n    }\n    public touchHard(): void {\n        this.touchData.hard = true;\n        this.touchData.drop = 0;\n    }\n    public touchHold(): void {\n        this.touchData.hold = true;\n    }\n\n    public setDas(das: number): void {\n        this.das = das;\n    }\n    public setRepeatSpeed(speed: number): void {\n        this.speed = speed;\n    }\n\n    public isRight(): boolean {\n        if (this.touchData.move > 0) {\n            this.touchData.move--;\n            return true;\n        }\n        if (this.moveButton > 0 && this.moveResult < this.moveButton) {\n            // 0.3秒のインターバル、0.5秒で端から端まで\n            if (this.moveResult < this.das) {\n                //this.moveResult = Math.max(18, this.moveButton + 3);\n                this.moveResult = Math.max(this.das, this.moveButton + this.speed);\n            } else {\n                //this.moveResult += 3;\n                this.moveResult++;\n            }\n            return true;\n        }\n        return false;\n    }\n    public isLeft(): boolean {\n        if (this.touchData.move < 0) {\n            this.touchData.move++;\n            return true;\n        }\n        if (this.moveButton < 0 && this.moveResult > this.moveButton) {\n            // 0.3秒のインターバル、0.5秒で端から端まで\n            if (this.moveResult > -this.das) {\n                //this.moveResult = Math.min(-18, this.moveButton - 3);\n                this.moveResult = Math.min(-this.das, this.moveButton - this.speed);\n            } else {\n                //this.moveResult -= 3;\n                this.moveResult--;\n            }\n            return true;\n        }\n        return false;\n    }\n    public isRightTurn(): boolean {\n        if (this.touchData.turn > 0) {\n            this.touchData.turn--;\n            return true;\n        }\n        if (this.turnButton > 0 && this.turnResult <= 0) {\n            this.turnResult = 1;\n            return true;\n        }\n        return false;\n    }\n    public isLeftTurn(): boolean {\n        if (this.touchData.turn < 0) {\n            this.touchData.turn++;\n            return true;\n        }\n        if (this.turnButton < 0 && this.turnResult >= 0) {\n            this.turnResult = -1;\n            return true;\n        }\n        return false;\n    }\n    public isHardDrop(): boolean {\n        if (this.touchData.hard) {\n            return true;\n        }\n        if (this.dropButton > 0 && this.dropResult <= 0) {\n            this.dropResult = 1;\n            return true;\n        }\n        return false;\n    }\n    public isSoftDrop(): boolean {\n        if (this.touchData.drop > 0) {\n            this.touchData.drop--;\n            return true;\n        }\n        if (this.dropButton < 0 /*&& this.dropResult >= 0*/) {\n            this.dropResult = -1;\n            return true;\n        }\n        return false;\n    }\n    public isHold(): boolean {\n        if (this.touchData.hold) {\n            this.touchData.hold = false;\n            return true;\n        }\n        if (this.holdButton) {\n            this.holdButton = false;\n            return true;\n        }\n        return false;\n    }\n\n    public stepFrame(num: number = 1): void {\n        if (this.moveButton < 0) {\n            this.moveButton -= num;\n        } else if (this.moveButton > 0) {\n            this.moveButton += num;\n        }\n    }\n\n    public push(btn: ButtonType): void {\n        switch (btn) {\n            case ButtonType.HardDrop:\n                this.dropButton = 1;\n                this.dropResult = 0;\n                break;\n            case ButtonType.Drop:\n                this.dropButton = -1;\n                this.dropResult = 0;\n                break;\n            case ButtonType.Right:\n                if (this.moveButton <= 0) {\n                    this.moveButton = 1;\n                    this.moveResult = 0;\n                }\n                break;\n            case ButtonType.Left:\n                if (this.moveButton >= 0) {\n                    this.moveButton = -1;\n                    this.moveResult = 0;\n                }\n                break;\n            case ButtonType.RightTurn:\n                if (this.turnButton <= 0) {\n                    this.turnButton = 1;\n                    this.turnResult = 0;\n                }\n                break;\n            case ButtonType.LeftTurn:\n                if (this.turnButton >= 0) {\n                    this.turnButton = -1;\n                    this.turnResult = 0;\n                }\n                break;\n            case ButtonType.Hold:\n                this.holdButton = true;\n                break;\n        }\n    }\n    public release(btn: ButtonType): void {\n        switch (btn) {\n            case ButtonType.HardDrop:\n                if (this.dropButton > 0) {\n                    this.dropButton = 0;\n                }\n                break;\n            case ButtonType.Drop:\n                if (this.dropButton < 0) {\n                    this.dropButton = 0;\n                }\n                break;\n            case ButtonType.Right:\n                if (this.moveButton > 0) {\n                    this.moveButton = 0;\n                }\n                break;\n            case ButtonType.Left:\n                if (this.moveButton < 0) {\n                    this.moveButton = 0;\n                }\n                break;\n            case ButtonType.RightTurn:\n                if (this.turnButton > 0) {\n                    this.turnButton = 0;\n                }\n                break;\n            case ButtonType.LeftTurn:\n                if (this.turnButton < 0) {\n                    this.turnButton = 0;\n                }\n                break;\n            case ButtonType.Hold:\n                this.holdButton = false;\n                break;\n        }\n\n    }\n}\n\n\n// TGMっぽいコンフィグ\nexport type TgmConfig = {\n    level: number;\n    nextLevel: number;\n    /** 背景色 */\n    bg?: number[][];\n    config: {\n        /** 落下速度 */\n        gravidy?: number;\n        /** 地面についてからの遊び時間 */\n        lock?: number;\n        /** ラインが消えないときの次のミノが落ち出すまでのフレーム */\n        are?: number;\n        /** 消えた後に、次のミノが落ち出すまでの時間 */\n        lineAre?: number;\n        /** ブロックが消えているときのアニメーション時間 */\n        lineClear?: number;\n        /** 遊び時間中の回転によるリセットの上限 */\n        resetLimit?: number;\n        /** ゴーストブロックの表示 */\n        ghost?: boolean;\n        /** ブロックを置いてから、何回のミノが登場したら見えなくなるか(0-15)。0だと見え続ける */\n        invisibleCount?: number;\n        /** 横移動の溜めフレーム数 */\n        das?: number;\n    };\n}[];\n\n/**\n * 標準的なコンフィグ\n */\nexport let normalTgmConfig: TgmConfig = [\n    {\n        level: 0,\n        nextLevel: 100,\n        config: {\n            are: 27,\n            lineAre: 27,\n            das: 16,\n            lock: 30,\n            lineClear: 40,\n            gravidy: 1024\n        },\n        bg: [[32, 32, 128], [64, 64, 192], [16, 16, 96], [48, 48, 160]]\n    },\n    {\n        level: 30,\n        nextLevel: 100,\n        config: {\n            gravidy: 1536\n        }\n    },\n    {\n        level: 35,\n        nextLevel: 100,\n        config: {\n            gravidy: 2048\n        }\n    },\n    {\n        level: 40,\n        nextLevel: 100,\n        config: {\n            gravidy: 2560\n        }\n    },\n    {\n        level: 50,\n        nextLevel: 100,\n        config: {\n            gravidy: 3072\n        }\n    },\n    {\n        level: 60,\n        nextLevel: 100,\n        config: {\n            gravidy: 4096\n        }\n    },\n    {\n        level: 70,\n        nextLevel: 100,\n        config: {\n            gravidy: 8192\n        }\n    },\n    {\n        level: 80,\n        nextLevel: 100,\n        config: {\n            gravidy: 12288\n        }\n    },\n    {\n        level: 90,\n        nextLevel: 100,\n        config: {\n            gravidy: 16384\n        }\n    },\n    {\n        level: 100,\n        nextLevel: 200,\n        config: {\n            gravidy: 20480\n        }\n    },\n    {\n        level: 120,\n        nextLevel: 200,\n        config: {\n            gravidy: 24576\n        }\n    },\n    {\n        level: 140,\n        nextLevel: 200,\n        config: {\n            gravidy: 28672\n        }\n    },\n    {\n        level: 160,\n        nextLevel: 200,\n        config: {\n            gravidy: 32768\n        }\n    },\n    {\n        level: 170,\n        nextLevel: 200,\n        config: {\n            gravidy: 36864\n        }\n    },\n    {\n        level: 200,\n        nextLevel: 300,\n        config: {\n            gravidy: 1024\n        }\n    },\n    {\n        level: 230,\n        nextLevel: 300,\n        config: {\n            gravidy: 8192\n        }\n    },\n    {\n        level: 233,\n        nextLevel: 300,\n        config: {\n            gravidy: 24576\n        }\n    },\n    {\n        level: 236,\n        nextLevel: 300,\n        config: {\n            gravidy: 32768\n        }\n    },\n    {\n        level: 239,\n        nextLevel: 300,\n        config: {\n            gravidy: 40960\n        }\n    },\n    {\n        level: 243,\n        nextLevel: 300,\n        config: {\n            gravidy: 49152\n        }\n    },\n    {\n        level: 247,\n        nextLevel: 300,\n        config: {\n            gravidy: 57344\n        }\n    },\n    {\n        level: 251,\n        nextLevel: 300,\n        config: {\n            gravidy: 65536\n        }\n    },\n    {\n        level: 300,\n        nextLevel: 400,\n        config: {\n            gravidy: 131072\n        }\n    },\n    {\n        level: 330,\n        nextLevel: 400,\n        config: {\n            gravidy: 196608\n        }\n    },\n    {\n        level: 360,\n        nextLevel: 400,\n        config: {\n            gravidy: 262144\n        }\n    },\n    {\n        level: 400,\n        nextLevel: 500,\n        config: {\n            gravidy: 327680\n        }\n    },\n    {\n        level: 420,\n        nextLevel: 500,\n        config: {\n            gravidy: 262144\n        }\n    },\n    {\n        level: 450,\n        nextLevel: 500,\n        config: {\n            gravidy: 196608\n        }\n    },\n    {\n        level: 500,\n        nextLevel: 600,\n        config: {\n            gravidy: 1310720,\n            das: 10,\n            lineClear: 25\n        }\n    },\n    {\n        level: 600,\n        nextLevel: 700,\n        config: {\n            lineAre: 18,\n            lineClear: 16\n        }\n    },\n    {\n        level: 700,\n        nextLevel: 800,\n        config: {\n            are: 18,\n            lineAre: 14,\n            lineClear: 12\n        }\n    },\n    {\n        level: 800,\n        nextLevel: 900,\n        config: {\n            are: 14,\n            lineAre: 8,\n            lineClear: 6\n        }\n    },\n    {\n        level: 900,\n        nextLevel: 999,\n        config: {\n            das: 8,\n            lock: 17\n        }\n    },\n];\n\nexport class TgmPlayListener implements ITetrisListener, INextMino {\n    public level: number;\n    public nextLevel: number;\n    private lastConfig: PlayConfig;\n    private nextBg?: number[][];\n\n    // 最後の４つ\n    private lastMinos = \"SZSZ\";\n\n    private configIndex = 0;\n\n    constructor(private config: TgmConfig) {\n        this.lastConfig = {\n            das: 18,\n            repeatSpeed: 1,\n            gravidy: 2,\n            ghost: true,\n            lineClear: 50,\n            invisibleCount: 0,\n            lineAre: 30,\n            are: 30,\n            resetLimit: 15,\n            lineWait: 0,\n            lock: 30\n        };\n        this.level = 0;\n        this.nextLevel = 0;\n        this.checkConfig();\n    }\n    nextMino(num: number): string {\n        // 過去４つを覚えておいて、それ以外が出るまで６回抽選、それでも出なければそのまま\n        // 最初に Z S O は出ない\n        let ix = \"I\";\n        for (let i = 0; i < 7; i++) {\n            ix = \"ISZOTLJ\".charAt(Math.floor(Math.random() * 7));\n            if (!this.lastMinos.includes(ix) && (num > 0 || ix !== \"O\")) {\n                break;\n            }\n        }\n        this.lastMinos = this.lastMinos.substring(1) + ix;\n        return ix;\n    }\n\n    getNextMino(): INextMino {\n        return this;\n    }\n\n    private checkConfig(): void {\n        if (this.configIndex < this.config.length) {\n            if (this.level >= this.config[this.configIndex].level) {\n                const cf = this.config[this.configIndex];\n                this.configIndex++;\n                this.lastConfig = Object.assign({}, this.lastConfig, cf.config);\n                this.nextLevel = cf.nextLevel;\n                if (cf.bg) {\n                    this.nextBg = cf.bg;\n                }\n                return;\n            }\n        } else if (this.level > this.nextLevel) {\n            // 見つからない\n            this.level = this.nextLevel;\n        }\n    }\n\n    public getBgColor(): number[][] | undefined {\n        let ret = this.nextBg;\n        this.nextBg = undefined;\n        return ret;\n    }\n\n    onHold(): void {\n    }\n    onDrop(num: number): void {\n    }\n    onAttach(pos: number[], delLines: number[]): void {\n        if (this.level < this.nextLevel - 1 || delLines.length > 0) {\n            this.level += delLines.length + 1;\n            if (delLines.length >= 3) {\n                this.level++;\n                if (delLines.length >= 4) {\n                    this.level++;\n                }\n            }\n        }\n        this.checkConfig();\n    }\n    onNext(config: PlayConfig): PlayConfig {\n        return this.lastConfig;\n    }\n}\n\n\nexport interface ITetrisListener {\n    /** ホールドした */\n    onHold(): void;\n\n    /**\n     * 操作で落下させた\n     * @param num 落下させたライン数\n     */\n    onDrop(num: number): void;\n\n    /**\n     * ミノがくっついてラインが消えた\n     * @param pos 置いた座標\n     * @param delLines 消えたライン\n     */\n    onAttach(pos: number[], delLines: number[]): void;\n\n    /**\n     * 次のミノが落ちてくる際に、必要であればconfigを変更する\n     * @param config \n     */\n    onNext(config: PlayConfig): PlayConfig;\n\n    getNextMino?(): INextMino;\n\n    getTetrimino?(): { [ch: string]: Tetrimino };\n\n    /**\n     * 移動した\n     * @param before  移動前\n     * @param after 移動後\n     * @param type Left, Right, Drop, LeftTurn, RightTurn, Hold\n     */\n    onMove?(before: { index: number, pos: number[] }, after: { index: number, pos: number[] }, type: ButtonType): void;\n}\n\n/**\n * 描画ルーチン\n */\nexport interface ITetrisDrawer {\n    /**\n     * 扱うシェーダを返却する\n     */\n    getShaders(): { vertex: string; fragment: string };\n    /**\n     * プログラムを初期化する\n     * @param gl \n     * @param program \n     */\n    initProgram(gl: WebGL2RenderingContext, program: WebGLProgram): void;\n    /**\n     * 描画する\n     * @param gl \n     * @param minoTex\n     * @param data \n     * @param num 前回描画から進んだフレーム数\n     */\n    draw(gl: WebGL2RenderingContext, minoTex: WebGLTexture, data: PlayData, num: number): void;\n}\n\n/**\n * 一時的にプレイを中断して処理を埋め込む\n */\nexport interface ITetrisInsertPaly {\n    /**\n     * 処理の継続\n     * @param playData \n     * @returns true: 続く, false: 終わる\n     */\n    onInsertFrame(playData: PlayData): boolean;\n}\n\n\nexport class BoxNextMino implements INextMino {\n    private cacheMino: string[] = [];\n\n    nextMino(num: number): string {\n        if (this.cacheMino.length < 1) {\n            let minos = [\"O\", \"I\", \"T\", \"S\", \"Z\", \"J\", \"L\"];\n            while (minos.length > 1) {\n                let ix = Math.floor(Math.random() * minos.length);\n                this.cacheMino.push(minos.splice(ix, 1)[0]);\n            }\n            this.cacheMino.push(minos[0]);\n        }\n        return this.cacheMino.splice(0, 1)[0];\n    }\n}\n\nexport class PlayData {\n    /**\n     * ブロックデータ\n     * 0:ブロックなし\n     * baaa aZZZ\n     * b: ブロックあり\n     * aaaa: 透明度、10=そのまま、10未満=半透明、11以上=光る\n     */\n    private blockData: Uint8Array;\n    private holdMino?: Tetrimino;\n    private nextMino: Tetrimino[] = [];\n    private curMino: {\n        x: number;\n        y: number;\n        rotate: number;\n        mino: Tetrimino;\n        /** 自由落下用 */\n        dropCount: number;\n        /** 地面についてからの遊びの時間 */\n        touchCount: number;\n        /** リセットした回数 */\n        resetCount: number;\n        hold: boolean;\n        block: number[][];\n        lastPos?: number[];\n        lastGhost?: number[];\n    } = {\n            dropCount: 0,\n            mino: tetriminoData['I'],\n            resetCount: 0,\n            rotate: 0,\n            touchCount: 0,\n            x: 3,\n            y: 20,\n            hold: false,\n            block: [],\n            lastGhost: undefined,\n            lastPos: undefined\n        };\n    private config: PlayConfig;\n    /**\n     * モード\n     * 0: Next待ち\n     * 1: 操作中\n     * 2: 遊び時間中\n     * 3: ブロックが消える直前\n     * 4: ブロックが消えている最中\n     */\n    private mode: number;\n    /**\n     * mode=0,3,4でのカウンタ\n     */\n    private modeCount: number;\n    /**\n     * 消えるライン\n     */\n    private delLines: number[] = [];\n\n    private nextMinoProc: INextMino;\n\n    private tetrimino: { [ch: string]: Tetrimino };\n\n    /**\n     * テトリミノの登場回数\n     */\n    private minoCount = 0;\n\n    private insertPlay?: ITetrisInsertPaly;\n\n    private overFlag = false;\n\n    constructor(private button: ButtonData, private listener: ITetrisListener) {\n        this.blockData = new Uint8Array(16 * 32);\n        this.modeCount = 30;\n        this.mode = 0;\n        this.config = {\n            das: 18,\n            repeatSpeed: 3,\n            gravidy: 2,\n            ghost: true,\n            lineClear: 30,\n            are: 30,\n            lineAre: 30,\n            resetLimit: 15,\n            lineWait: 10,\n            lock: 20,\n            invisibleCount: 0\n        };\n        let nextMino: INextMino | undefined;\n        if (this.listener.getNextMino) {\n            nextMino = this.listener.getNextMino();\n        }\n        if (!nextMino) {\n            nextMino = new BoxNextMino();\n        }\n        this.nextMinoProc = nextMino;\n\n        let mino: { [key: string]: Tetrimino } | undefined;\n        if (this.listener.getTetrimino) {\n            mino = this.listener.getTetrimino();\n        }\n        if (!mino) {\n            mino = tetriminoData;\n        }\n        this.tetrimino = mino;\n        let index = 0;\n        for (let key in this.tetrimino) {\n            index++;\n            this.tetrimino[key] = Object.assign({}, this.tetrimino[key], {\n                index: index\n            });\n        }\n        this.makeNext();\n    }\n\n    private makeNext(): void {\n        if (this.nextMino.length > 7) {\n            return;\n        }\n        for (let i = 0; i < 7; i++) {\n            this.nextMino.push(this.tetrimino[this.nextMinoProc.nextMino(this.minoCount++)]);\n        }\n    }\n\n    private setCurMino(mino: Tetrimino): void {\n        this.curMino = {\n            dropCount: 0,\n            mino: mino,\n            resetCount: 0,\n            rotate: 0,\n            touchCount: 0,\n            x: 3,\n            y: 20,\n            hold: false,\n            block: [],\n            lastGhost: undefined,\n            lastPos: undefined\n        };\n        // ここでブロックの作成\n        for (let ix = 0; ix < 4; ix++) {\n            let flag = this.curMino.mino.pattern[ix];\n            let blk: number[] = [];\n            for (let y = 0; y < 4; y++) {\n                for (let x = 0; x < 4; x++) {\n                    if ((flag & 0x8000) !== 0) {\n                        blk.push(x, -y);\n                    }\n                    flag <<= 1;\n                }\n            }\n            this.curMino.block.push(blk);\n        }\n        // GameOver判定\n        if (!this.canMove(0, 0, 0)) {\n            console.log(\"Game Over\");\n            this.setInsertPlay(new TetrisGameOverPlay());\n        }\n    }\n\n    public stepFrame(num: number = 1): void {\n        this.button.stepFrame(num);\n        for (let i = 0; i < num; i++) {\n            // ブロックのアニメーション\n            for (let y = 0; y < 20; y++) {\n                let flag = this.blockData[(y << 4) | 15];\n                if (flag > 0) {\n                    let newFlag = 0;\n                    for (let x = 0; x < 10; x++) {\n                        let v = this.blockData[(y << 4) | x];\n                        if ((v & 0x78) > 0 && (flag === 2 || (v & 0x78) !== 0x50)) {\n                            this.blockData[(y << 4) | x] = Math.max(0, v - 8);\n                            newFlag = flag;\n                        }\n                    }\n                    // アニメーション終了\n                    this.blockData[(y << 4) | 15] = newFlag;\n                }\n            }\n            if (this.insertPlay) {\n                if (!this.insertPlay.onInsertFrame(this)) {\n                    this.insertPlay = undefined;\n                }\n                continue;\n            }\n            if (this.mode === 0) {\n                if (this.modeCount > 0) {\n                    this.modeCount--;\n                    continue;\n                }\n                // 次のミノ\n                this.setCurMino(this.nextMino.splice(0, 1)[0]);\n                this.mode = 1;\n                this.makeNext();\n                const ret = this.listener.onNext(this.config);\n                if (ret) {\n                    this.config = ret;\n                    this.button.setDas(this.config.das);\n                    this.button.setRepeatSpeed(this.config.repeatSpeed);\n                }\n            }\n            if (this.mode === 3) {\n                // 消える待ち\n                if (this.modeCount > 0) {\n                    this.modeCount--;\n                    continue;\n                }\n                this.mode = 4;\n                this.modeCount = this.config.lineClear;\n                this.listener.onAttach(this.curMino!.lastPos!, this.delLines);\n            }\n            if (this.mode === 4) {\n                if (this.modeCount > 0) {\n                    this.modeCount--;\n                    continue;\n                }\n                // ブロックを落とす\n                let dy = 1;\n                for (let y = this.delLines[0]; y < 24; y++) {\n                    if (dy < this.delLines.length && y + dy === this.delLines[dy]) {\n                        dy++;\n                        y--;\n                        continue;\n                    }\n                    this.blockData.set(this.blockData.subarray((y + dy) << 4, (y + dy + 1) << 4), y << 4);\n                }\n                this.mode = 0;\n                this.modeCount = this.config.lineAre;\n                continue;\n            }\n            if (this.mode === 1 || this.mode === 2) {\n                // 移動する\n                if (!this.curMino.hold && this.button.isHold()) {\n                    // ホールド\n                    const before = this.getTetrimino(0)!;\n                    if (!this.holdMino) {\n                        if (this.listener.onMove) {\n                            this.listener.onMove(before, { index: -1, pos: [] }, ButtonType.Hold);\n                        }\n                        this.holdMino = this.nextMino.splice(0, 1)[0];\n                    } else if (this.listener.onMove) {\n                        this.listener.onMove(before, this.getTetrimino(-1)!, ButtonType.Hold);\n                    }\n                    const bak = this.curMino.mino;\n                    this.setCurMino(this.holdMino);\n                    this.holdMino = bak;\n                    this.curMino.hold = true;\n                    this.listener.onHold();\n                }\n                let reset = false;\n                // 回転\n                const before = this.getTetrimino(0)!;\n                let moveType = ButtonType.Drop;\n                if (this.button.isRightTurn()) {\n                    if (this.canMove(0, 0, 1)) {\n                        this.curMino.rotate = (this.curMino.rotate + 1) & 3;\n                        reset = true;\n                    } else {\n                        // SRS\n                        const offset = this.curMino.mino.srs.right[this.curMino.rotate];\n                        for (let ix = 0; ix < offset.length; ix += 2) {\n                            let dx = offset[ix];\n                            let dy = offset[ix + 1];\n                            if (this.canMove(dx, dy, 1)) {\n                                this.curMino.rotate = (this.curMino.rotate + 1) & 3;\n                                this.curMino.x += dx;\n                                this.curMino.y += dy;\n                                reset = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (reset) {\n                        moveType = ButtonType.RightTurn;\n                    }\n                } else if (this.button.isLeftTurn()) {\n                    if (this.canMove(0, 0, 3)) {\n                        this.curMino.rotate = (this.curMino.rotate + 3) & 3;\n                        reset = true;\n                    } else {\n                        // SRS\n                        const offset = this.curMino.mino.srs.left[this.curMino.rotate];\n                        for (let ix = 0; ix < offset.length; ix += 2) {\n                            let dx = offset[ix];\n                            let dy = offset[ix + 1];\n                            if (this.canMove(dx, dy, 3)) {\n                                this.curMino.rotate = (this.curMino.rotate + 3) & 3;\n                                this.curMino.x += dx;\n                                this.curMino.y += dy;\n                                reset = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (reset) {\n                        moveType = ButtonType.LeftTurn;\n                    }\n                }\n                // 左右移動\n                if (this.button.isRight()) {\n                    if (this.canMove(1, 0, 0)) {\n                        this.curMino.x++;\n                        reset = true;\n                        moveType = ButtonType.Right;\n                    }\n                } else if (this.button.isLeft()) {\n                    if (this.canMove(-1, 0, 0)) {\n                        this.curMino.x--;\n                        reset = true;\n                        moveType = ButtonType.Left;\n                    }\n                }\n                if (reset) {\n                    this.curMino.lastGhost = undefined;\n                    this.curMino.lastPos = undefined;\n                }\n                // ドロップ\n                if (this.mode === 2) {\n                    // 遊びの時間\n                    if (this.canMove(0, -1, 0)) {\n                        // 移動できるようになった\n                        this.mode = 1;\n                        if (this.curMino.resetCount < this.config.resetLimit) {\n                            this.curMino.touchCount = 0;\n                        }\n                        this.curMino.dropCount = Math.max(GRAVIDY_SCALE - this.config.gravidy, 0);\n                    } else {\n                        if (reset && this.curMino.resetCount < this.config.resetLimit) {\n                            this.curMino.resetCount++;\n                            this.curMino.touchCount = 0;\n                        }\n                        if (!this.button.isSoftDrop() && this.curMino.touchCount < this.config.lock) {\n                            this.curMino.touchCount++;\n                            continue;\n                        }\n                        // 遊びが終わった\n                        const mino = this.getTetrimino(0)!;\n                        for (let ix = 0; ix < mino.pos.length; ix += 2) {\n                            let x = mino.pos[ix];\n                            let yix = mino.pos[ix + 1] << 4;\n                            this.blockData[yix | x] = this.curMino.mino.index! | 0xf8;\n                            // アニメーションマーク\n                            this.blockData[yix | 15] = 1;\n                            if (this.config.invisibleCount) {\n                                // 消えるまでのカウントを設定する\n                                this.blockData[yix | (10 + (x >> 1))] |= (this.config.invisibleCount << ((x & 1) * 4));\n                            }\n                        }\n                        this.button.resetTouch();\n                        if (this.checkDeleteLines()) {\n                            // ラインが消えた\n                            this.mode = 3;\n                            this.modeCount = this.config.lineWait;\n                        } else {\n                            this.mode = 0;\n                            this.modeCount = this.config.are;\n                            this.listener.onAttach(this.curMino.lastPos!, []);\n                        }\n                        continue;\n                    }\n                }\n                // 自由落下\n                this.curMino.dropCount += this.config.gravidy;\n                let bak = this.curMino.dropCount;\n                if (this.button.isHardDrop()) {\n                    this.curMino.dropCount += GRAVIDY_SCALE * 20;\n                } else if (this.button.isSoftDrop()) {\n                    this.curMino.dropCount = Math.max(this.curMino.dropCount, GRAVIDY_SCALE);\n                }\n                while (this.curMino.dropCount >= GRAVIDY_SCALE) {\n                    if (this.canMove(0, -1, 0)) {\n                        this.curMino.dropCount -= GRAVIDY_SCALE;\n                        bak -= GRAVIDY_SCALE;\n                        this.curMino.y--;\n                        this.curMino.lastPos = undefined;\n                        moveType = ButtonType.Drop;\n                        reset = true;\n                    } else {\n                        // 地面にくっついた\n                        this.curMino.dropCount = 0;\n                        this.mode = 2;\n                        //this.curMino.touchCount = 0;\n                        break;\n                    }\n                }\n                if (reset) {\n                    // 移動した\n                    if (this.listener.onMove) {\n                        this.listener.onMove(before, this.getTetrimino(0)!, moveType);\n                    }\n                }\n                if (bak < 0) {\n                    // 操作で落下させた\n                    this.listener.onDrop(Math.ceil(-bak / GRAVIDY_SCALE));\n                }\n            }\n        }\n    }\n\n    private canMove(dx: number, dy: number, dix: number): boolean {\n        let ix = (this.curMino.rotate + dix) & 3;\n        for (let i = 0; i < 4; i++) {\n            let x = this.curMino.block[ix][i * 2] + this.curMino.x + dx;\n            let y = this.curMino.block[ix][i * 2 + 1] + this.curMino.y + dy;\n            if (x < 0 || x >= 10 || y < 0) {\n                return false;\n            }\n            if (this.blockData[(y << 4) | x] !== 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * 消えるラインがあるかをチェックする\n     * @returns \n     */\n    private checkDeleteLines(): boolean {\n        this.delLines = [];\n        for (let y = 0; y < 20; y++) {\n            let count = 0;\n            const yix = y << 4;\n            for (let x = 0; x < 10; x++) {\n                if (this.blockData[yix | x]) {\n                    count++;\n                    // invisibleのチェック\n                    let cnt = (this.blockData[yix | (10 + (x >> 1))] >> ((x & 1) * 4)) & 15;\n                    if (cnt > 0) {\n                        cnt--;\n                        const ix = yix | (10 + (x >> 1));\n                        this.blockData[ix] = (this.blockData[ix] & (0xf0 >> ((x & 1) * 4))) | (cnt << ((x & 1) * 4));\n                        if (cnt === 0) {\n                            // 消え始める\n                            this.blockData[yix | x] = (this.blockData[yix | x] & 0x87) | 0x38;\n                            this.blockData[yix | 15] = 1;\n                        }\n                    }\n                }\n            }\n            if (count === 10) {\n                this.delLines.push(y);\n                for (let x = 0; x < 10; x++) {\n                    this.blockData[yix | x] = (this.blockData[(y << 4) | x] & 7) | 0x78;\n                }\n                this.blockData[yix | 15] = 2;\n            }\n        }\n        return this.delLines.length > 0;\n    }\n\n    public getGhost(): number[] | null {\n        if (this.mode !== 1 && this.mode !== 2) {\n            return null;\n        }\n        if (!this.config.ghost) {\n            return null;\n        }\n        if (this.curMino.lastGhost) {\n            return this.curMino.lastGhost;\n        }\n        let dy = 0;\n        while (this.canMove(0, dy - 1, 0)) {\n            dy--;\n        }\n        let pos: number[] = [];\n        const blk = this.curMino.block[this.curMino.rotate];\n        for (let i = 0; i < 4; i++) {\n            pos.push(this.curMino.x + blk[i * 2], this.curMino.y + dy + blk[i * 2 + 1]);\n        }\n        this.curMino.lastGhost = pos;\n        return pos;\n    }\n\n    /**\n     * テトリミノの座標を得る\n     * @param num  -1:Hold, 0:Current, 1-:next\n     * @returns \n     */\n    public getTetrimino(num: number): {\n        index: number;\n        pos: number[]\n    } | null {\n        let mino: Tetrimino | undefined;\n        if (num < 0) {\n            // Hold\n            mino = this.holdMino;\n        } else if (num === 0) {\n            // Current\n            if (this.mode !== 1 && this.mode !== 2) {\n                // 移動中ではない\n                return null;\n            }\n            let pos: number[];\n            if (this.curMino.lastPos) {\n                pos = this.curMino.lastPos;\n            } else {\n                pos = [];\n                const blk = this.curMino.block[this.curMino.rotate];\n                for (let i = 0; i < 4; i++) {\n                    pos.push(this.curMino.x + blk[i * 2], this.curMino.y + blk[i * 2 + 1]);\n                }\n                this.curMino.lastPos = pos;\n            }\n            return {\n                index: this.curMino.mino.index!,\n                pos: pos\n            };\n        } else {\n            mino = this.nextMino[num - 1];\n        }\n        if (mino) {\n            let pos: number[] = [];\n            let flag = mino.pattern[0];\n            for (let y = 0; y < 4; y++) {\n                for (let x = 0; x < 4; x++) {\n                    if ((flag & 0x8000) !== 0) {\n                        pos.push(x, -y);\n                    }\n                    flag <<= 1;\n                }\n            }\n            return {\n                index: mino.index!,\n                pos: pos\n            };\n        }\n        return null;\n    }\n\n    public getBlock(): Uint8Array {\n        return this.blockData;\n    }\n\n    public setInsertPlay(play: ITetrisInsertPaly): void {\n        this.insertPlay = play;\n    }\n    public getInsertPlay(): ITetrisInsertPaly | undefined {\n        return this.insertPlay;\n    }\n    public isGameOver(): boolean {\n        return this.overFlag;\n    }\n    public setGameOver(): void {\n        this.overFlag = true;\n    }\n}\n\n\n\n/**\n * ゲームオーバー\n */\nexport class TetrisGameOverPlay implements ITetrisInsertPaly {\n    private lineY = 0;\n    private timeCount = 0;\n\n    public constructor() {\n\n    }\n\n    onInsertFrame(playData: PlayData): boolean {\n        if (this.timeCount > 0) {\n            this.timeCount--;\n            return true;\n        }\n        if (this.lineY < 20) {\n            const data = playData.getBlock();\n            for (let x = 0; x < 10; x++) {\n                if (data[(this.lineY << 4) | x] & 0x80) {\n                    // ブロックがあった\n                    data[(this.lineY << 4) | x] = 0xc0;\n                }\n            }\n            this.lineY++;\n        } else {\n            playData.setGameOver();\n        }\n        this.timeCount = 12;\n        return true;\n    }\n}","import { BlockRender, DrawBlockData, getBlockRender } from \"./BlockRender\";\nimport { FontRender, getFontRender } from \"./FontRender\";\nimport { ButtonType, IPlay, StickData } from \"./PlayData\";\nimport { ButtonData, INextMino, ITetrisListener, PlayConfig, PlayData, Tetrimino, TgmPlayListener, minoColorPattern, normalTgmConfig } from \"./TetrisService\";\nimport { TitlePlay } from \"./TitlePlay\";\n\nconst buttonTypeList = [\n    ButtonType.Left,\n    ButtonType.Right,\n    ButtonType.HardDrop,\n    ButtonType.Drop,\n    ButtonType.LeftTurn,\n    ButtonType.RightTurn,\n    ButtonType.Hold,\n];\n\nconst minoColorList = minoColorPattern[0];\n\nexport class GamePlay implements IPlay, ITetrisListener {\n    private button: ButtonData;\n    private fontRender: FontRender;\n    private blockRender: BlockRender;\n    private playData: PlayData;\n    private tgmListener: TgmPlayListener;\n    private buttonState: boolean[] = [];\n    private lastWeight: {\n        horizontal: number;\n        vertical: number;\n    } = {\n            horizontal: 0,\n            vertical: 0\n        };\n    private shadowList: {\n        index: number,\n        pos: number[],\n        alpha: number;\n    }[] = [];\n    private breakList: {\n        index: number;\n        pos: number[];\n        veloc: number[];\n        accel: number[];\n    }[] = [];\n    private nextPos = 0;\n    private startCount = 180;\n\n    public constructor(gl: WebGL2RenderingContext) {\n        this.button = new ButtonData();\n        this.fontRender = getFontRender(gl);\n        this.blockRender = getBlockRender(gl);\n        this.tgmListener = new TgmPlayListener(normalTgmConfig);\n        this.playData = new PlayData(this.button, this);\n        this.blockRender.setWeight(0, 0);\n    }\n    onHold(): void {\n        this.tgmListener.onHold();\n    }\n    onDrop(num: number): void {\n        this.tgmListener.onDrop(num);\n    }\n    onAttach(pos: number[], delLines: number[]): void {\n        if (delLines.length > 0) {\n            const block = this.playData.getBlock();\n            for (let i = 0; i < delLines.length; i++) {\n                for (let x = 0; x < 10; x++) {\n                    const index = block[delLines[i] * 16 + x] & 7;\n                    this.breakList.push({\n                        index: index,\n                        pos: [x, 19 - delLines[i], 0, 0],\n                        veloc: [(x - 4.5) / 20.0, -0.5 + (delLines.length - i) / 10.0, 0.05, 1],\n                        accel: [0, 0.05, 0, 0]\n                    });\n                }\n            }\n        }\n        this.tgmListener.onAttach(pos, delLines);\n    }\n    onNext(config: PlayConfig): PlayConfig {\n        this.nextPos = 5;\n        return this.tgmListener.onNext(config);\n    }\n    getNextMino(): INextMino {\n        return this.tgmListener.getNextMino();\n    }\n    onMove(before: { index: number; pos: number[]; }, after: { index: number; pos: number[]; }, type: ButtonType): void {\n        if (type == ButtonType.Hold) {\n            let mx = before.pos[0];\n            let my = before.pos[1];\n            for (let i = 2; i < before.pos.length; i += 2) {\n                if (before.pos[i] < mx) {\n                    mx = before.pos[i];\n                }\n                if (before.pos[i + 1] > my) {\n                    my = before.pos[i + 1];\n                }\n            }\n            let newpos: number[] = [];\n            for (let i = 0; i < before.pos.length; i += 2) {\n                newpos.push(before.pos[i] - mx - 6, before.pos[i + 1] - my + 18);\n            }\n            this.addShadow(before.index, before.pos, newpos);\n            if (after.index > 0) {\n                let oldpos: number[] = [];\n                newpos = [];\n                for (let i = 0; i < after.pos.length; i += 2) {\n                    oldpos.push(after.pos[i] - 5, after.pos[i + 1] + 18);\n                    newpos.push(after.pos[i] + 3, after.pos[i + 1] + 18);\n                }\n                this.addShadow(after.index, oldpos, newpos);\n            }\n        } else if (type != ButtonType.Left && type != ButtonType.Right) {\n            this.addShadow(before.index, before.pos, after.pos);\n        }\n    }\n    private addShadow(index: number, before: number[], after: number[]): void {\n        const sz = Math.max(Math.abs(before[0] - after[0]), Math.abs(before[1] - after[1]));\n        for (let i = 0; i < sz; i += 5) {\n            for (let j = 0; j < before.length; j += 2) {\n                this.shadowList.push({\n                    index: index,\n                    pos: [before[j] + (after[j] - before[j]) * i / sz, before[j + 1] + (after[j + 1] - before[j + 1]) * i / sz, 0],\n                    alpha: 1 - (sz - i - 1) * 0.02\n                });\n            }\n        }\n    }\n\n    stepFrame(gl: WebGL2RenderingContext, stick: StickData): IPlay {\n        // 影\n        for (let i = 0; i < this.shadowList.length; i++) {\n            this.shadowList[i].alpha -= 0.1;\n            if (this.shadowList[i].alpha <= 0) {\n                this.shadowList.splice(i, 1);\n                i--;\n            }\n        }\n        // 消えるブロック\n        for (let i = 0; i < this.breakList.length; i++) {\n            let dt = this.breakList[i];\n            for (let j = 0; j < 4; j++) {\n                dt.pos[j] += dt.veloc[j];\n                dt.veloc[j] += dt.accel[j];\n            }\n            if (dt.pos[1] > 24) {\n                this.breakList.splice(i, 1);\n                i--;\n            }\n        }\n        let btn = [\n            stick.isLeft(),\n            stick.isRight(),\n            stick.isHardDrop(),\n            stick.isDrop(),\n            stick.isLeftTurn(),\n            stick.isRightTurn(),\n            stick.isHold()\n        ];\n        for (let i = 0; i < buttonTypeList.length; i++) {\n            if (btn[i] !== this.buttonState[i]) {\n                if (btn[i]) {\n                    this.button.push(buttonTypeList[i]);\n                } else {\n                    this.button.release(buttonTypeList[i]);\n                }\n            }\n        }\n        this.buttonState = btn;\n        if (this.startCount > 0) {\n            this.startCount--;\n        } else {\n            this.playData.stepFrame(1);\n        }\n        let data: DrawBlockData = {\n            block: [],\n            shadow: [],\n            next: []\n        };\n        for (let dt of this.breakList) {\n            let col = minoColorList[dt.index];\n            if (dt.pos[3] & 2) {\n                col = [1, 1, 1];\n            }\n            data.block.push({\n                pos: [dt.pos[0], dt.pos[1], dt.pos[2]],\n                color: [col[0], col[1], col[2], 1]\n            });\n        }\n        const current = this.playData.getTetrimino(0);\n        if (current) {\n            const col = minoColorList[current.index];\n            for (let i = 0; i < current.pos.length; i += 2) {\n                data.block.push({\n                    pos: [current.pos[i], 19 - current.pos[i + 1], 0],\n                    color: [col[0], col[1], col[2], 1]\n                });\n            }\n            const ghost = this.playData.getGhost();\n            if (ghost) {\n                for (let i = 0; i < ghost.length; i += 2) {\n                    data.block.push({\n                        pos: [ghost[i], 19 - ghost[i + 1], 0],\n                        color: [col[0], col[1], col[2], 0.4]\n                    });\n                }\n            }\n        }\n        for (let dt of this.shadowList) {\n            const col = minoColorList[dt.index];\n            data.shadow.push({\n                pos: [dt.pos[0], 19 - dt.pos[1], 0],\n                color: [col[0], col[1], col[2], dt.alpha]\n            });\n        }\n        const hold = this.playData.getTetrimino(-1);\n        if (hold) {\n            const col = minoColorList[hold.index];\n            for (let i = 0; i < hold.pos.length; i += 2) {\n                data.next.push({\n                    pos: [hold.pos[i] - 6, 2 - hold.pos[i + 1], 0],\n                    color: [col[0], col[1], col[2], 1]\n                });\n            }\n        }\n        if (this.nextPos > 0) {\n            this.nextPos -= 0.25;\n            if (this.nextPos < 0) {\n                this.nextPos = 0;\n            }\n        }\n        let dx = 3 + this.nextPos;\n        let dy = -2.5;\n        for (let i = 1; i < 6; i++) {\n            let next = this.playData.getTetrimino(i);\n            if (!next) {\n                break;\n            }\n            const col = minoColorList[next.index];\n            if (i == 1000 && !current) {\n                // nextを描画\n                for (let i = 0; i < next.pos.length; i += 2) {\n                    data.block.push({\n                        pos: [next.pos[i] + dx, dy - next.pos[i + 1] - 1.5, 0],\n                        color: [col[0], col[1], col[2], 1]\n                    });\n                }\n            } else {\n                for (let i = 0; i < next.pos.length; i += 2) {\n                    data.next.push({\n                        pos: [next.pos[i] + dx, dy - next.pos[i + 1], 0],\n                        color: [col[0], col[1], col[2], 1]\n                    });\n                }\n            }\n            dx += 5;\n            if (dx > 13) {\n                dy += (dx - 13) * 3 / 5;\n                dx = 13;\n            }\n        }\n\n        const block = this.playData.getBlock();\n        let topHeight = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        let weight = 0;\n        for (let y = 19; y >= 0; y--) {\n            for (let x = 0; x < 10; x++) {\n                let blk = block[y * 16 + x];\n                /*\n                 * 0:ブロックなし\n                 * baaa aZZZ\n                 * b: ブロックあり\n                 * aaaa: 透明度、10=そのまま、10未満=半透明、11以上=光る\n                 */\n                if (blk & 128) {\n                    weight += (x - 4.5);\n                    if (y > topHeight[x]) {\n                        topHeight[x] = y;\n                    }\n                    // ブロックあり\n                    const aaa = (blk & 0x78) >> 3;\n                    let alpha = 1;\n                    let col = minoColorList[blk & 7];\n                    if (aaa < 10) {\n                        alpha = aaa / 10.0;\n                    } else if (aaa > 10) {\n                        col = [aaa * 0.05 + 0.4, aaa * 0.05 + 0.4, aaa * 0.05 + 0.4];\n                    }\n                    data.block.push({\n                        pos: [x, 19 - y, 0],\n                        color: [col[0], col[1], col[2], alpha]\n                    });\n                }\n            }\n        }\n        let ver = 20;\n        for (let top of topHeight) {\n            if (top < ver) {\n                ver = top;\n            }\n        }\n        if (this.lastWeight.horizontal != weight || this.lastWeight.vertical != ver) {\n            if (this.lastWeight.horizontal < weight) {\n                this.lastWeight.horizontal += 1;\n                if (this.lastWeight.horizontal > weight) {\n                    this.lastWeight.horizontal = weight;\n                }\n            } else if (this.lastWeight.horizontal > weight) {\n                this.lastWeight.horizontal -= 1;\n                if (this.lastWeight.horizontal < weight) {\n                    this.lastWeight.horizontal = weight;\n                }\n            }\n            if (this.lastWeight.vertical < ver) {\n                this.lastWeight.vertical += 0.05;\n                if (this.lastWeight.vertical > ver) {\n                    this.lastWeight.vertical = ver;\n                }\n            } else if (this.lastWeight.vertical > ver) {\n                this.lastWeight.vertical -= 0.05;\n                if (this.lastWeight.vertical < ver) {\n                    this.lastWeight.vertical = ver;\n                }\n            }\n            this.blockRender.setWeight(this.lastWeight.horizontal, this.lastWeight.vertical);\n        }\n        this.blockRender.draw(gl, data);\n\n        this.fontRender.draw(gl, \"SCORE\", [-0.9, -0.3, 0.25, 0.05], [1, 1, 1]);\n        let sc = String(this.tgmListener.level).padStart(4, ' ');\n        let nxsc = String(this.tgmListener.nextLevel).padStart(4, ' ');\n\n        this.fontRender.draw(gl, sc, [-0.9, -0.2, 0.2, 0.05], [1, 1, 1]);\n        this.fontRender.draw(gl, nxsc, [-0.9, -0.12, 0.2, 0.05], [1, 1, 1]);\n\n        if (this.playData.isGameOver()) {\n            this.fontRender.draw(gl, \"GAME OVER\", [-0.5, -0.1, 1, 0.2], [1, 0.4, 0.3, 1]);\n            if (stick.isStart(true)) {\n                return new TitlePlay(gl);\n            }\n        } else if (this.startCount > 0) {\n            if (this.startCount > 60) {\n                const cl = Math.cos(this.startCount * Math.PI / 20) * 0.3;\n                this.fontRender.draw(gl, \"READY\", [-0.3, -0.05, 0.6, 0.1], [cl + 0.7, cl + 0.7, 1]);\n            } else {\n                this.fontRender.draw(gl, \"GO\", [-0.1, -0.05, 0.2, 0.1], [1, 1, 1]);\n            }\n        }\n\n        return this;\n    }\n\n}","import { BlockRender, getBlockRender } from \"./BlockRender\";\nimport { FontRender, getFontRender } from \"./FontRender\";\nimport { GamePlay } from \"./GamePlay\";\nimport { IPlay, StickData } from \"./PlayData\";\n\nexport class TitlePlay implements IPlay {\n    private fontRender: FontRender;\n\n    public constructor(gl: WebGL2RenderingContext) {\n        this.fontRender = getFontRender(gl);\n    }\n\n    stepFrame(gl: WebGL2RenderingContext, stick: StickData): IPlay {\n        if (stick.isStart(true)) {\n            return new GamePlay(gl);\n        }\n        gl.clearColor(0, 0, 0, 1);\n        gl.clearDepth(1.0);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.fontRender.drawFrame(gl, [-0.7, -0.8, 1.4, 0.8], [0.2, 0.4, 0.2], [0.9, 0.9, 0.4]);\n        this.fontRender.draw(gl, \"TETRIS\", [-0.6, -0.7, 1.2, 0.6], [0.7, 0.7, 0.7]);\n        gl.flush();\n        return this;\n    }\n\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useRef, useEffect, useState } from 'react';\nimport { ButtonType, GamepadStick, IPlay, KeyboardStick, StickData, saveData } from '../services/PlayData';\nimport { TitlePlay } from '../services/TitlePlay';\nimport { Button, Col, Container, Modal, Row, Table } from 'react-bootstrap';\nimport { ArrowLeft, ArrowRight, ArrowUp, ArrowDown, CardList, CaretRight, BoxArrowInDownLeft, BoxArrowInDownRight, ArrowReturnLeft, ArrowReturnRight, ArrowRepeat, BoxArrowInDown, PlayFill, ArrowClockwise, ArrowCounterclockwise } from 'react-bootstrap-icons';\n\ninterface CanvasComponentProps {\n    // ここに必要なプロパティを追加\n}\n\n\nconst keyConfigIndex = [\n    ButtonType.HardDrop,\n    ButtonType.Left,\n    ButtonType.Drop,\n    ButtonType.Right,\n    ButtonType.Start,\n    ButtonType.Hold,\n    ButtonType.LeftTurn,\n    ButtonType.RightTurn\n];\n\nconst keyConfigLabels = [\n    'ArrowUp',\n    'ArrowLeft',\n    'ArrowDown',\n    'ArrowRight',\n    'Enter',\n    'Space',\n    'KeyZ',\n    'KeyX'\n];\n\nlet configSetMap: { [key: string]: number; } = {};\nlet padSetMap: { [button: number]: number } = {};\n\nconst CanvasComponent: React.FC<CanvasComponentProps> = () => {\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const animationFrameIdRef = useRef<number>();\n    const contextRef = useRef<WebGL2RenderingContext>();\n    const playRef = useRef<IPlay>();\n    const stickRef = useRef<KeyboardStick>(new KeyboardStick());\n\n    const [keyConfig] = useState<string[]>(keyConfigLabels);\n    const [isOpen, setIsOpen] = useState(false);\n    const [keySelect, setKeySelect] = useState(-1);\n    const [keyLabels, setKeyLabels] = useState<string[]>([]);\n    const [padEnabled, setPadEnabled] = useState<boolean>(false);\n    const [padConfig, setPadConfig] = useState<boolean>(false);\n\n    const makeKeyLabels = () => {\n        const config = stickRef.current.getKeyConfig();\n        for (let key in config) {\n            const type = config[key];\n            keyConfigLabels[keyConfigIndex.indexOf(type)] = key;\n        }\n    };\n    const makePadLabels = () => {\n        const config = (stickRef.current as GamepadStick).getPadConfig();\n        for (let type of keyConfigIndex) {\n            keyConfigLabels[keyConfigIndex.indexOf(type)] = \"Button \" + config.buttons[type];\n        }\n    };\n\n    const pushPadHandler = (button: number) => {\n        if (keySelectRef.current < 0 || button in padSetMap) {\n            // すでに設定済み\n            return;\n        }\n        (stickRef.current as GamepadStick).resetPad();\n        padSetMap[button] = keyConfigIndex[keySelectRef.current];\n        keyConfigLabels[keySelectRef.current] = \"Button \" + button;\n        if (keySelectRef.current + 1 < keyConfigLabels.length) {\n            setKeySelect(keySelectRef.current + 1);\n        } else {\n            setKeySelect(-1);\n        }\n    }\n    const openDialog = (pad: boolean, button?: HTMLButtonElement) => {\n        setPadConfig(pad);\n        if (pad) {\n            makePadLabels();\n            (stickRef.current as GamepadStick).pushListener = pushPadHandler;\n        } else {\n            makeKeyLabels();\n        }\n        setIsOpen(true);\n        setKeySelect(0);\n        configSetMap = {};\n        padSetMap = {};\n        if (button) {\n            button.blur();\n        }\n    };\n    const closeDialog = () => {\n        if (padConfig && stickRef.current instanceof GamepadStick) {\n            (stickRef.current as GamepadStick).pushListener = undefined;\n        }\n        setIsOpen(false);\n    };\n    const applyDialog = () => {\n        if (padConfig) {\n            const pad = stickRef.current as GamepadStick;\n            let newConfig = pad.getPadConfig();\n            for (let key in padSetMap) {\n                newConfig.buttons[padSetMap[key]] = parseInt(key);\n            }\n            pad.setPadConfig(newConfig);\n        } else {\n            let config: { [key: string]: ButtonType; } = {};\n            for (let key in configSetMap) {\n                config[key] = keyConfigIndex[configSetMap[key]];\n            }\n            stickRef.current.setKeyConfig(config);\n            setKeyLabels([...keyConfigLabels]);\n        }\n        setIsOpen(false);\n    };\n    const onGamepadConnected = (e: GamepadEvent) => {\n        console.log(e);\n        stickRef.current = new GamepadStick(e.gamepad);\n        setPadEnabled(true);\n    };\n    const onGamepadDisconnected = (e: GamepadEvent) => {\n        console.log(e);\n        stickRef.current = new KeyboardStick();\n        setPadEnabled(false);\n    };\n\n    const isOpenRef = useRef(isOpen);\n    const keySelectRef = useRef(keySelect);\n    const padConfigRef = useRef(padConfig);\n\n    useEffect(() => {\n        isOpenRef.current = isOpen;\n    }, [isOpen]);\n    useEffect(() => {\n        keySelectRef.current = keySelect;\n    }, [keySelect]);\n    useEffect(() => {\n        padConfigRef.current = padConfig;\n    }, [padConfig]);\n\n    const onKeyEvent = (event: KeyboardEvent) => {\n        if (isOpenRef.current) {\n            if (event.type === 'keydown' && !padConfigRef.current) {\n                if (keySelectRef.current < 0 || event.code in configSetMap) {\n                    // すでに設定済み\n                    return;\n                }\n                event.preventDefault();\n                configSetMap[event.code] = keySelectRef.current;\n                keyConfigLabels[keySelectRef.current] = event.code;\n                if (keySelectRef.current + 1 < keyConfigLabels.length) {\n                    setKeySelect(keySelectRef.current + 1);\n                } else {\n                    setKeySelect(-1);\n                }\n            }\n        } else {\n            if (stickRef.current.processEvent(event as any)) {\n                event.preventDefault();\n            }\n        }\n    }\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        contextRef.current = canvas.getContext('webgl2')!;\n        playRef.current = new TitlePlay(contextRef.current);\n        saveData.getConfig('keyConfig').then(res => {\n            makeKeyLabels();\n            setKeyLabels([...keyConfigLabels]);\n        });\n\n        console.log(\"Init\");\n        const proc = () => {\n            stickRef.current.checkButton();\n            playRef.current = playRef.current!.stepFrame(contextRef.current!, stickRef.current!);\n            animationFrameIdRef.current = requestAnimationFrame(proc);\n        };\n        animationFrameIdRef.current = requestAnimationFrame(proc);\n\n        window.addEventListener(\"keydown\", onKeyEvent, false);\n        window.addEventListener(\"keyup\", onKeyEvent, false);\n        window.addEventListener(\"gamepadconnected\", onGamepadConnected);\n        window.addEventListener(\"gamepaddisconnected\", onGamepadDisconnected);\n        return () => {\n            cancelAnimationFrame(animationFrameIdRef.current!);\n            console.log(\"Clear\");\n            window.removeEventListener(\"keydown\", onKeyEvent);\n            window.removeEventListener(\"keyup\", onKeyEvent);\n            window.removeEventListener(\"gamepadconnected\", onGamepadConnected);\n            window.removeEventListener(\"gamepaddisconnected\", onGamepadDisconnected);\n        }\n    }, []);\n\n    return (\n        <div style={{ display: \"flex\", padding: \"1em\" }}>\n            <canvas ref={canvasRef} width={512} height={512} style={{ backgroundColor: \"black\" }} />\n            <div>\n                <Table striped bordered style={{ marginLeft: '1em' }}>\n                    <thead>\n                        <tr><th colSpan={2}>キー</th><th>操作内容</th></tr>\n                    </thead>\n                    <tbody>\n                        <tr><td><BoxArrowInDown></BoxArrowInDown></td><td>{keyLabels[0]}</td><td>ハードドロップ</td></tr>\n                        <tr><td><ArrowLeft></ArrowLeft></td><td>{keyLabels[1]}</td><td>左移動</td></tr>\n                        <tr><td><ArrowDown></ArrowDown></td><td>{keyLabels[2]}</td><td>ソフトドロップ</td></tr>\n                        <tr><td><ArrowRight></ArrowRight></td><td>{keyLabels[3]}</td><td>右移動</td></tr>\n                        <tr><td><CaretRight></CaretRight></td><td>{keyLabels[4]}</td><td>ゲーム開始</td></tr>\n                        <tr><td><ArrowRepeat></ArrowRepeat></td><td>{keyLabels[5]}</td><td>ホールド</td></tr>\n                        <tr><td><ArrowCounterclockwise></ArrowCounterclockwise></td><td>{keyLabels[6]}</td><td>左回転</td></tr>\n                        <tr><td><ArrowClockwise></ArrowClockwise></td><td>{keyLabels[7]}</td><td>右回転</td></tr>\n                    </tbody>\n                </Table>\n                <Button onClick={(event) => openDialog(false, event.target as HTMLButtonElement)}>キー設定</Button>\n                {\n                    padEnabled && <Button onClick={(event) => openDialog(true, event.target as HTMLButtonElement)} style={{ marginLeft: \"1em\" }}>パッド設定</Button>\n                }\n                <Modal show={isOpen} onHide={closeDialog}>\n                    <Modal.Header>\n                        <Modal.Title>{padConfig ? \"パッド設定\" : \"キー設定\"}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Container>\n                            <Row>\n                                <Col xs={2}></Col>\n                                <Col xs={3} className='text-center'>\n                                    <BoxArrowInDown size={50} className={keySelect === 0 ? 'bg-info' : ''}></BoxArrowInDown>\n                                    <p style={{ fontSize: '10px' }}>{keyConfig[0]}</p>\n                                </Col>\n                                <Col xs={1}></Col>\n                                <Col xs={3} className='text-center'>\n                                    <CaretRight size={50} className={keySelect === 4 ? 'bg-info' : ''}></CaretRight>\n                                    <p style={{ fontSize: '10px' }}>{keyConfig[4]}</p>\n                                </Col>\n                                <Col xs={3} className='text-center'>\n                                    <ArrowRepeat size={50} className={keySelect === 5 ? 'bg-info' : ''}></ArrowRepeat>\n                                    <p style={{ fontSize: '10px' }}>{keyConfig[5]}</p>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs={3} className='text-center'>\n                                    <ArrowLeft size={50} className={keySelect === 1 ? 'bg-info' : ''}></ArrowLeft>\n                                    <p style={{ fontSize: '10px' }}>{keyConfig[1]}</p>\n                                </Col>\n                                <Col xs={1}></Col>\n                                <Col xs={3} sm={3} md={3} lg={3} className='text-center'>\n                                    <ArrowRight size={50} className={keySelect === 3 ? 'bg-info' : ''}></ArrowRight>\n                                    <p style={{ fontSize: '10px' }}>{keyConfig[3]}</p>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs={2}></Col>\n                                <Col xs={3} className='text-center'>\n                                    <ArrowDown size={50} className={keySelect === 2 ? 'bg-info' : ''}></ArrowDown>\n                                    <p style={{ fontSize: '10px' }}>{keyConfig[2]}</p>\n                                </Col>\n                                <Col xs={1}></Col>\n                                <Col xs={3} className='text-center'>\n                                    <ArrowCounterclockwise size={50} className={keySelect === 6 ? 'bg-info' : ''}></ArrowCounterclockwise>\n                                    <p style={{ fontSize: '10px' }}>{keyConfig[6]}</p>\n                                </Col>\n                                <Col xs={3} className='text-center'>\n                                    <ArrowClockwise size={50} className={keySelect === 7 ? 'bg-info' : ''}></ArrowClockwise>\n                                    <p style={{ fontSize: '10px' }}>{keyConfig[7]}</p>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button disabled={keySelect >= 0} variant='success' onClick={applyDialog}>決定</Button>\n                        <Button disabled={keySelect === 0} variant='warning' onClick={() => openDialog(padConfig)}>再設定</Button>\n                        <Button variant='danger' onClick={closeDialog}>キャンセル</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n        </div >\n    );\n};\n\nexport default CanvasComponent;","import React from 'react';\nimport './App.css';\nimport CanvasComponent from './components/CanvasComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CanvasComponent></CanvasComponent>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}